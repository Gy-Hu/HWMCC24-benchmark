; BTOR description generated by Yosys 0.12+36 (git sha1 7608985d2, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) for module wrapper.
1 sort bitvec 8
2 input 1 ILA.r3_randinit ; wrapper.v:336.22-348.2|wrapper.v:524.28-524.39
3 input 1 ILA.r2_randinit ; wrapper.v:336.22-348.2|wrapper.v:523.28-523.39
4 input 1 ILA.r1_randinit ; wrapper.v:336.22-348.2|wrapper.v:522.28-522.39
5 input 1 ILA.r0_randinit ; wrapper.v:336.22-348.2|wrapper.v:521.28-521.39
6 input 1 __ILA_I_inst ; wrapper.v:115.18-115.30
7 sort bitvec 2
8 input 7 __VLG_I_dummy_read_rf ; wrapper.v:116.18-116.39
9 input 1 __VLG_I_inst ; wrapper.v:117.18-117.30
10 sort bitvec 1
11 input 10 __VLG_I_inst_valid ; wrapper.v:118.18-118.36
12 input 10 __VLG_I_stallex ; wrapper.v:119.18-119.33
13 input 10 __VLG_I_stallwb ; wrapper.v:120.18-120.33
14 input 1 ____auxvar0__recorder_init__ ; wrapper.v:121.18-121.46
15 input 1 ____auxvar1__recorder_init__ ; wrapper.v:122.18-122.46
16 input 1 ____auxvar2__recorder_init__ ; wrapper.v:123.18-123.46
17 input 1 ____auxvar3__recorder_init__ ; wrapper.v:124.18-124.46
18 input 10 clk ; wrapper.v:125.18-125.21
19 input 10 dummy_reset ; wrapper.v:126.18-126.29
20 input 10 rst ; wrapper.v:127.18-127.21
21 state 10 RTL.id_ex_valid
22 not 10 12
23 not 10 13
24 state 10 RTL.ex_wb_valid
25 not 10 24
26 or 10 23 25
27 and 10 22 26
28 and 10 21 27
29 output 28 RTL__DOT__ex_go ; wrapper.v:128.19-128.34
30 state 7 RTL.ex_wb_rd
31 output 30 RTL__DOT__ex_wb_rd ; wrapper.v:129.19-129.37
32 state 10 RTL.ex_wb_reg_wen
33 output 32 RTL__DOT__ex_wb_reg_wen ; wrapper.v:130.19-130.42
34 output 24 RTL__DOT__ex_wb_valid ; wrapper.v:131.19-131.40
35 state 7 RTL.id_ex_rd
36 output 35 RTL__DOT__id_ex_rd ; wrapper.v:132.19-132.37
37 state 10 RTL.id_ex_reg_wen
38 output 37 RTL__DOT__id_ex_reg_wen ; wrapper.v:133.19-133.42
39 output 21 RTL__DOT__id_ex_valid ; wrapper.v:134.19-134.40
40 output 9 RTL__DOT__inst ; wrapper.v:135.19-135.33
41 not 10 21
42 or 10 27 41
43 output 42 RTL__DOT__inst_ready ; wrapper.v:136.19-136.39
44 output 11 RTL__DOT__inst_valid ; wrapper.v:137.19-137.39
45 state 1 RTL.registers[0]
46 output 45 RTL__DOT__registers_0_ ; wrapper.v:138.19-138.41
47 state 1 RTL.registers[1]
48 output 47 RTL__DOT__registers_1_ ; wrapper.v:139.19-139.41
49 state 1 RTL.registers[2]
50 output 49 RTL__DOT__registers_2_ ; wrapper.v:140.19-140.41
51 state 1 RTL.registers[3]
52 output 51 RTL__DOT__registers_3_ ; wrapper.v:141.19-141.41
53 state 7 RTL.scoreboard[0]
54 output 53 RTL__DOT__scoreboard_0_ ; wrapper.v:142.19-142.42
55 state 7 RTL.scoreboard[1]
56 output 55 RTL__DOT__scoreboard_1_ ; wrapper.v:143.19-143.42
57 state 7 RTL.scoreboard[2]
58 output 57 RTL__DOT__scoreboard_2_ ; wrapper.v:144.19-144.42
59 state 7 RTL.scoreboard[3]
60 output 59 RTL__DOT__scoreboard_3_ ; wrapper.v:145.19-145.42
61 and 10 24 23
62 output 61 RTL__DOT__wb_go ; wrapper.v:146.19-146.34
63 const 10 0
64 state 10
65 init 10 64 63
66 output 64 __2ndENDED__ ; wrapper.v:201.23-201.35
67 const 1 00000000
68 state 1
69 init 1 68 67
70 output 68 __CYCLE_CNT__ ; wrapper.v:197.23-197.36
71 state 10
72 init 10 71 63
73 state 10
74 init 10 73 63
75 and 10 71 73
76 output 75 __EDCOND__ ; wrapper.v:147.19-147.29
77 state 10
78 init 10 77 63
79 output 77 __ENDED__ ; wrapper.v:200.23-200.32
80 const 10 1
81 state 10
82 init 10 81 80
83 and 10 75 81
84 not 10 77
85 and 10 83 84
86 output 85 __IEND__ ; wrapper.v:148.19-148.27
87 state 1 ILA.r0
88 output 87 __ILA_SO_r0 ; wrapper.v:149.19-149.30
89 state 1 ILA.r1
90 output 89 __ILA_SO_r1 ; wrapper.v:150.19-150.30
91 state 1 ILA.r2
92 output 91 __ILA_SO_r2 ; wrapper.v:151.19-151.30
93 state 1 ILA.r3
94 output 93 __ILA_SO_r3 ; wrapper.v:152.19-152.30
95 output 81 __RESETED__ ; wrapper.v:202.23-202.34
96 output 73 __STARTED__ ; wrapper.v:199.23-199.34
97 state 10
98 init 10 97 80
99 output 97 __START__ ; wrapper.v:198.23-198.32
100 slice 10 8 0 0
101 ite 1 100 47 45
102 ite 1 100 51 49
103 slice 10 8 1 1
104 ite 1 103 102 101
105 output 104 __VLG_O_dummy_rf_data ; wrapper.v:153.19-153.40
106 output 42 __VLG_O_inst_ready ; wrapper.v:154.19-154.37
107 not 10 85
108 not 10 97
109 state 1
110 eq 10 87 109
111 or 10 108 110
112 eq 10 87 45
113 or 10 97 112
114 and 10 111 113
115 or 10 107 114
116 state 1
117 eq 10 89 116
118 or 10 108 117
119 eq 10 89 47
120 or 10 97 119
121 and 10 118 120
122 or 10 107 121
123 and 10 115 122
124 state 1
125 eq 10 91 124
126 or 10 108 125
127 eq 10 91 49
128 or 10 97 127
129 and 10 126 128
130 or 10 107 129
131 and 10 123 130
132 state 1
133 eq 10 93 132
134 or 10 108 133
135 eq 10 93 51
136 or 10 97 135
137 and 10 134 136
138 or 10 107 137
139 and 10 131 138
140 output 139 __all_assert_wire__ ; wrapper.v:155.19-155.38
141 and 10 42 11
142 or 10 108 141
143 eq 10 6 9
144 or 10 108 143
145 and 10 142 144
146 slice 10 53 1 1
147 and 10 21 37
148 redor 10 35
149 not 10 148
150 and 10 147 149
151 eq 10 146 150
152 and 10 145 151
153 slice 10 53 0 0
154 and 10 24 32
155 redor 10 30
156 not 10 155
157 and 10 154 156
158 eq 10 153 157
159 and 10 152 158
160 slice 10 55 1 1
161 uext 7 80 1
162 eq 10 35 161
163 and 10 147 162
164 eq 10 160 163
165 and 10 159 164
166 slice 10 55 0 0
167 uext 7 80 1
168 eq 10 30 167
169 and 10 154 168
170 eq 10 166 169
171 and 10 165 170
172 slice 10 57 1 1
173 const 7 10
174 eq 10 35 173
175 and 10 147 174
176 eq 10 172 175
177 and 10 171 176
178 slice 10 57 0 0
179 eq 10 30 173
180 and 10 154 179
181 eq 10 178 180
182 and 10 177 181
183 slice 10 59 1 1
184 const 7 11
185 eq 10 35 184
186 and 10 147 185
187 eq 10 183 186
188 and 10 182 187
189 slice 10 59 0 0
190 eq 10 30 184
191 and 10 154 190
192 eq 10 189 191
193 and 10 188 192
194 slice 7 6 7 6
195 eq 10 194 173
196 or 10 108 195
197 and 10 193 196
198 or 10 108 80
199 and 10 197 198
200 not 10 81
201 not 10 19
202 or 10 200 201
203 and 10 199 202
204 or 10 97 73
205 state 10
206 init 10 205 63
207 not 10 205
208 and 10 204 207
209 state 10
210 init 10 209 63
211 and 10 209 61
212 and 10 208 211
213 not 10 212
214 eq 10 109 45
215 or 10 213 214
216 and 10 203 215
217 state 10
218 init 10 217 63
219 not 10 217
220 and 10 204 219
221 and 10 220 211
222 not 10 221
223 eq 10 116 47
224 or 10 222 223
225 and 10 216 224
226 state 10
227 init 10 226 63
228 not 10 226
229 and 10 204 228
230 and 10 229 211
231 not 10 230
232 eq 10 124 49
233 or 10 231 232
234 and 10 225 233
235 state 10
236 init 10 235 63
237 not 10 235
238 and 10 204 237
239 and 10 238 211
240 not 10 239
241 eq 10 132 51
242 or 10 240 241
243 and 10 234 242
244 or 10 108 114
245 and 10 243 244
246 or 10 108 121
247 and 10 245 246
248 or 10 108 129
249 and 10 247 248
250 or 10 108 137
251 and 10 249 250
252 output 251 __all_assume_wire__ ; wrapper.v:156.19-156.38
253 output 109 __auxvar0__recorder ; wrapper.v:203.23-203.42
254 output 205 __auxvar0__recorder_sn_condmet ; wrapper.v:205.23-205.53
255 state 1
256 output 255 __auxvar0__recorder_sn_vhold ; wrapper.v:204.23-204.51
257 output 116 __auxvar1__recorder ; wrapper.v:206.23-206.42
258 output 217 __auxvar1__recorder_sn_condmet ; wrapper.v:208.23-208.53
259 state 1
260 output 259 __auxvar1__recorder_sn_vhold ; wrapper.v:207.23-207.51
261 output 124 __auxvar2__recorder ; wrapper.v:209.23-209.42
262 output 226 __auxvar2__recorder_sn_condmet ; wrapper.v:211.23-211.53
263 state 1
264 output 263 __auxvar2__recorder_sn_vhold ; wrapper.v:210.23-210.51
265 output 132 __auxvar3__recorder ; wrapper.v:212.23-212.42
266 output 235 __auxvar3__recorder_sn_condmet ; wrapper.v:214.23-214.53
267 state 1
268 output 267 __auxvar3__recorder_sn_vhold ; wrapper.v:213.23-213.51
269 and 10 211 204
270 and 10 269 84
271 and 10 205 270
272 not 10 271
273 eq 10 45 255
274 or 10 272 273
275 and 10 217 270
276 not 10 275
277 eq 10 47 259
278 or 10 276 277
279 and 10 274 278
280 and 10 226 270
281 not 10 280
282 eq 10 49 263
283 or 10 281 282
284 and 10 279 283
285 and 10 235 270
286 not 10 285
287 eq 10 51 267
288 or 10 286 287
289 and 10 284 288
290 or 10 205 270
291 or 10 107 290
292 and 10 289 291
293 or 10 217 270
294 or 10 107 293
295 and 10 292 294
296 or 10 226 270
297 or 10 107 296
298 and 10 295 297
299 or 10 235 270
300 or 10 107 299
301 and 10 298 300
302 output 301 __sanitycheck_wire__ ; wrapper.v:157.19-157.39
303 output 142 additional_mapping_control_assume__p0__ ; wrapper.v:158.19-158.58
304 output 144 input_map_assume___p1__ ; wrapper.v:159.19-159.42
305 output 151 invariant_assume__p2__ ; wrapper.v:160.19-160.41
306 output 158 invariant_assume__p3__ ; wrapper.v:161.19-161.41
307 output 164 invariant_assume__p4__ ; wrapper.v:162.19-162.41
308 output 170 invariant_assume__p5__ ; wrapper.v:163.19-163.41
309 output 176 invariant_assume__p6__ ; wrapper.v:164.19-164.41
310 output 181 invariant_assume__p7__ ; wrapper.v:165.19-165.41
311 output 187 invariant_assume__p8__ ; wrapper.v:166.19-166.41
312 output 192 invariant_assume__p9__ ; wrapper.v:167.19-167.41
313 output 196 issue_decode__p10__ ; wrapper.v:168.19-168.38
314 output 198 issue_valid__p11__ ; wrapper.v:169.19-169.37
315 output 202 noreset__p12__ ; wrapper.v:170.19-170.33
316 output 215 post_value_holder__p13__ ; wrapper.v:171.19-171.43
317 output 224 post_value_holder__p14__ ; wrapper.v:172.19-172.43
318 output 233 post_value_holder__p15__ ; wrapper.v:173.19-173.43
319 output 242 post_value_holder__p16__ ; wrapper.v:174.19-174.43
320 output 274 post_value_holder_overly_constrained__p25__ ; wrapper.v:175.19-175.62
321 output 278 post_value_holder_overly_constrained__p26__ ; wrapper.v:176.19-176.62
322 output 283 post_value_holder_overly_constrained__p27__ ; wrapper.v:177.19-177.62
323 output 288 post_value_holder_overly_constrained__p28__ ; wrapper.v:178.19-178.62
324 output 291 post_value_holder_triggered__p29__ ; wrapper.v:179.19-179.53
325 output 294 post_value_holder_triggered__p30__ ; wrapper.v:180.19-180.53
326 output 297 post_value_holder_triggered__p31__ ; wrapper.v:181.19-181.53
327 output 300 post_value_holder_triggered__p32__ ; wrapper.v:182.19-182.53
328 state 10
329 init 10 328 63
330 output 328 ppl_stage_ex ; wrapper.v:215.23-215.35
331 output 97 ppl_stage_ex_enter_cond ; wrapper.v:183.19-183.42
332 output 28 ppl_stage_ex_exit_cond ; wrapper.v:184.19-184.41
333 output 71 ppl_stage_finish ; wrapper.v:217.23-217.39
334 output 211 ppl_stage_finish_enter_cond ; wrapper.v:185.19-185.46
335 output 80 ppl_stage_finish_exit_cond ; wrapper.v:186.19-186.45
336 output 209 ppl_stage_wb ; wrapper.v:216.23-216.35
337 and 10 328 28
338 output 337 ppl_stage_wb_enter_cond ; wrapper.v:187.19-187.42
339 output 61 ppl_stage_wb_exit_cond ; wrapper.v:188.19-188.41
340 output 115 variable_map_assert__p21__ ; wrapper.v:189.19-189.45
341 output 122 variable_map_assert__p22__ ; wrapper.v:190.19-190.45
342 output 130 variable_map_assert__p23__ ; wrapper.v:191.19-191.45
343 output 138 variable_map_assert__p24__ ; wrapper.v:192.19-192.45
344 output 244 variable_map_assume___p17__ ; wrapper.v:193.19-193.46
345 output 246 variable_map_assume___p18__ ; wrapper.v:194.19-194.46
346 output 248 variable_map_assume___p19__ ; wrapper.v:195.19-195.46
347 output 250 variable_map_assume___p20__ ; wrapper.v:196.19-196.46
348 not 10 80
349 or 10 251 348
350 constraint 349
351 not 10 139
352 and 10 80 351
353 uext 10 20 0 ILA.rst ; wrapper.v:336.22-348.2|wrapper.v:491.18-491.21
354 sort bitvec 4
355 const 354 0000
356 slice 354 6 5 2
357 concat 1 355 356
358 slice 7 6 1 0
359 redor 10 358
360 not 10 359
361 ite 1 360 357 87
362 uext 1 361 0 ILA.n9 ; wrapper.v:336.22-348.2|wrapper.v:520.17-520.19
363 uext 1 357 0 ILA.n8 ; wrapper.v:336.22-348.2|wrapper.v:519.17-519.19
364 slice 354 6 5 2
365 uext 354 364 0 ILA.n7 ; wrapper.v:336.22-348.2|wrapper.v:518.17-518.19
366 uext 10 360 0 ILA.n6 ; wrapper.v:336.22-348.2|wrapper.v:517.17-517.19
367 uext 7 358 0 ILA.n4 ; wrapper.v:336.22-348.2|wrapper.v:516.17-516.19
368 uext 10 195 0 ILA.n2 ; wrapper.v:336.22-348.2|wrapper.v:515.17-515.19
369 eq 10 358 184
370 ite 1 369 357 93
371 uext 1 370 0 ILA.n17 ; wrapper.v:336.22-348.2|wrapper.v:514.17-514.20
372 uext 10 369 0 ILA.n16 ; wrapper.v:336.22-348.2|wrapper.v:513.17-513.20
373 eq 10 358 173
374 ite 1 373 357 91
375 uext 1 374 0 ILA.n14 ; wrapper.v:336.22-348.2|wrapper.v:512.17-512.20
376 uext 10 373 0 ILA.n13 ; wrapper.v:336.22-348.2|wrapper.v:511.17-511.20
377 uext 7 80 1
378 eq 10 358 377
379 ite 1 378 357 89
380 uext 1 379 0 ILA.n12 ; wrapper.v:336.22-348.2|wrapper.v:510.17-510.20
381 uext 10 378 0 ILA.n11 ; wrapper.v:336.22-348.2|wrapper.v:509.17-509.20
382 uext 7 194 0 ILA.n0 ; wrapper.v:336.22-348.2|wrapper.v:508.17-508.19
383 uext 1 6 0 ILA.inst ; wrapper.v:336.22-348.2|wrapper.v:490.18-490.22
384 uext 10 18 0 ILA.clk ; wrapper.v:336.22-348.2|wrapper.v:489.18-489.21
385 uext 7 184 0 ILA.bv_2_3_n15 ; wrapper.v:336.22-348.2|wrapper.v:505.17-505.27
386 uext 7 173 0 ILA.bv_2_2_n1 ; wrapper.v:336.22-348.2|wrapper.v:504.17-504.26
387 const 7 01
388 uext 7 387 0 ILA.bv_2_1_n10 ; wrapper.v:336.22-348.2|wrapper.v:503.17-503.27
389 const 7 00
390 uext 7 389 0 ILA.bv_2_0_n5 ; wrapper.v:336.22-348.2|wrapper.v:502.17-502.26
391 uext 10 97 0 ILA.__START__ ; wrapper.v:336.22-348.2|wrapper.v:488.18-488.27
392 uext 10 80 0 ILA.__ILA_simplePipe_valid__ ; wrapper.v:336.22-348.2|wrapper.v:493.19-493.43
393 uext 10 195 0 ILA.__ILA_simplePipe_decode_of_SET__ ; wrapper.v:336.22-348.2|wrapper.v:492.19-492.51
394 state 1 ILA.__COUNTER_start__n3
395 init 1 394 67
396 uext 10 61 0 RTL.wb_go ; wrapper.v:398.12-427.2|wrapper.v:641.6-641.11
397 state 1 RTL.ex_wb_val
398 uext 1 397 0 RTL.wb_forwarding_val ; wrapper.v:398.12-427.2|wrapper.v:661.12-661.29
399 uext 10 23 0 RTL.wb_ex_ready ; wrapper.v:398.12-427.2|wrapper.v:640.6-640.17
400 uext 10 13 0 RTL.stallwb ; wrapper.v:398.12-427.2|wrapper.v:598.36-598.43
401 uext 10 63 0 RTL.stallid ; wrapper.v:398.12-427.2|wrapper.v:633.6-633.13
402 uext 10 12 0 RTL.stallex ; wrapper.v:398.12-427.2|wrapper.v:598.16-598.23
403 ite 10 61 63 189
404 and 10 21 37
405 eq 10 35 184
406 and 10 404 405
407 ite 10 28 406 403
408 ite 10 28 63 183
409 slice 7 9 7 6
410 uext 7 80 1
411 eq 10 409 410
412 eq 10 409 173
413 or 10 411 412
414 eq 10 409 184
415 or 10 413 414
416 and 10 11 415
417 slice 7 9 1 0
418 eq 10 417 184
419 and 10 416 418
420 and 10 11 42
421 ite 10 420 419 408
422 concat 7 421 407
423 uext 7 422 0 RTL.scoreboard_nxt[3] ; wrapper.v:398.12-427.2|wrapper.v:667.12-667.26
424 ite 10 61 63 178
425 eq 10 35 173
426 and 10 404 425
427 ite 10 28 426 424
428 ite 10 28 63 172
429 eq 10 417 173
430 and 10 416 429
431 ite 10 420 430 428
432 concat 7 431 427
433 uext 7 432 0 RTL.scoreboard_nxt[2] ; wrapper.v:398.12-427.2|wrapper.v:667.12-667.26
434 ite 10 61 63 166
435 uext 7 80 1
436 eq 10 35 435
437 and 10 404 436
438 ite 10 28 437 434
439 ite 10 28 63 160
440 uext 7 80 1
441 eq 10 417 440
442 and 10 416 441
443 ite 10 420 442 439
444 concat 7 443 438
445 uext 7 444 0 RTL.scoreboard_nxt[1] ; wrapper.v:398.12-427.2|wrapper.v:667.12-667.26
446 ite 10 61 63 153
447 redor 10 35
448 not 10 447
449 and 10 404 448
450 ite 10 28 449 446
451 ite 10 28 63 146
452 redor 10 417
453 not 10 452
454 and 10 416 453
455 ite 10 420 454 451
456 concat 7 455 450
457 uext 7 456 0 RTL.scoreboard_nxt[0] ; wrapper.v:398.12-427.2|wrapper.v:667.12-667.26
458 uext 10 19 0 RTL.rst ; wrapper.v:398.12-427.2|wrapper.v:596.32-596.35
459 input 7
460 slice 7 9 3 2
461 eq 10 460 184
462 ite 7 461 59 459
463 eq 10 460 173
464 ite 7 463 57 462
465 uext 7 80 1
466 eq 10 460 465
467 ite 7 466 55 464
468 redor 10 460
469 not 10 468
470 ite 7 469 53 467
471 uext 7 470 0 RTL.rs2_write_loc ; wrapper.v:398.12-427.2|wrapper.v:735.12-735.25
472 slice 10 9 2 2
473 ite 1 472 47 45
474 ite 1 472 51 49
475 slice 10 9 3 3
476 ite 1 475 474 473
477 uext 1 476 0 RTL.rs2_val ; wrapper.v:398.12-427.2|wrapper.v:737.12-737.19
478 uext 7 460 0 RTL.rs2 ; wrapper.v:398.12-427.2|wrapper.v:729.12-729.15
479 input 7
480 slice 7 9 5 4
481 eq 10 480 184
482 ite 7 481 59 479
483 eq 10 480 173
484 ite 7 483 57 482
485 uext 7 80 1
486 eq 10 480 485
487 ite 7 486 55 484
488 redor 10 480
489 not 10 488
490 ite 7 489 53 487
491 uext 7 490 0 RTL.rs1_write_loc ; wrapper.v:398.12-427.2|wrapper.v:734.12-734.25
492 slice 10 9 4 4
493 ite 1 492 47 45
494 ite 1 492 51 49
495 slice 10 9 5 5
496 ite 1 495 494 493
497 uext 1 496 0 RTL.rs1_val ; wrapper.v:398.12-427.2|wrapper.v:736.12-736.19
498 uext 7 480 0 RTL.rs1 ; wrapper.v:398.12-427.2|wrapper.v:728.12-728.15
499 uext 7 417 0 RTL.rd ; wrapper.v:398.12-427.2|wrapper.v:730.12-730.14
500 uext 7 409 0 RTL.op ; wrapper.v:398.12-427.2|wrapper.v:727.12-727.14
501 uext 10 11 0 RTL.inst_valid ; wrapper.v:398.12-427.2|wrapper.v:597.39-597.49
502 uext 10 42 0 RTL.inst_ready ; wrapper.v:398.12-427.2|wrapper.v:597.63-597.73
503 uext 1 9 0 RTL.inst ; wrapper.v:398.12-427.2|wrapper.v:597.22-597.26
504 slice 354 9 5 2
505 uext 354 504 0 RTL.immd
506 uext 10 11 0 RTL.if_id_valid ; wrapper.v:398.12-427.2|wrapper.v:630.6-630.17
507 uext 1 9 0 RTL.if_id_inst ; wrapper.v:398.12-427.2|wrapper.v:608.12-608.22
508 uext 10 415 0 RTL.id_wen ; wrapper.v:398.12-427.2|wrapper.v:732.6-732.12
509 input 1
510 state 1 RTL.id_ex_operand1
511 state 1 RTL.id_ex_operand2
512 and 1 510 511
513 not 1 512
514 state 7 RTL.id_ex_op
515 eq 10 514 184
516 ite 1 515 513 509
517 eq 10 514 173
518 ite 1 517 510 516
519 add 1 510 511
520 uext 7 80 1
521 eq 10 514 520
522 ite 1 521 519 518
523 uext 7 80 1
524 eq 10 470 523
525 ite 1 524 397 522
526 redor 10 470
527 not 10 526
528 ite 1 527 476 525
529 uext 1 528 0 RTL.id_rs2_val ; wrapper.v:398.12-427.2|wrapper.v:743.12-743.22
530 uext 7 80 1
531 eq 10 490 530
532 ite 1 531 397 522
533 redor 10 490
534 not 10 533
535 ite 1 534 496 532
536 uext 1 535 0 RTL.id_rs1_val ; wrapper.v:398.12-427.2|wrapper.v:739.12-739.22
537 uext 1 528 0 RTL.id_operand2 ; wrapper.v:398.12-427.2|wrapper.v:748.12-748.23
538 slice 354 9 5 2
539 concat 1 355 538
540 ite 1 412 539 535
541 uext 1 540 0 RTL.id_operand1 ; wrapper.v:398.12-427.2|wrapper.v:747.12-747.23
542 uext 10 42 0 RTL.id_if_ready ; wrapper.v:398.12-427.2|wrapper.v:631.6-631.17
543 uext 10 420 0 RTL.id_go ; wrapper.v:398.12-427.2|wrapper.v:632.6-632.11
544 uext 10 416 0 RTL.forwarding_id_wen ; wrapper.v:398.12-427.2|wrapper.v:652.12-652.29
545 uext 7 417 0 RTL.forwarding_id_wdst ; wrapper.v:398.12-427.2|wrapper.v:651.12-651.30
546 uext 10 404 0 RTL.forwarding_ex_wen ; wrapper.v:398.12-427.2|wrapper.v:654.12-654.29
547 uext 7 35 0 RTL.forwarding_ex_wdst ; wrapper.v:398.12-427.2|wrapper.v:653.12-653.30
548 uext 10 27 0 RTL.ex_id_ready ; wrapper.v:398.12-427.2|wrapper.v:636.6-636.17
549 uext 10 28 0 RTL.ex_go ; wrapper.v:398.12-427.2|wrapper.v:637.6-637.11
550 uext 1 522 0 RTL.ex_forwarding_val ; wrapper.v:398.12-427.2|wrapper.v:658.12-658.29
551 uext 1 522 0 RTL.ex_alu_result ; wrapper.v:398.12-427.2|wrapper.v:786.11-786.24
552 uext 1 104 0 RTL.dummy_rf_data ; wrapper.v:398.12-427.2|wrapper.v:599.55-599.68
553 uext 7 8 0 RTL.dummy_read_rf ; wrapper.v:398.12-427.2|wrapper.v:599.22-599.35
554 uext 10 18 0 RTL.clk ; wrapper.v:398.12-427.2|wrapper.v:596.16-596.19
555 uext 10 61 0 RTL.RTL__DOT__wb_go ; wrapper.v:398.12-427.2|wrapper.v:600.183-600.198
556 uext 7 59 0 RTL.RTL__DOT__scoreboard_3_ ; wrapper.v:398.12-427.2|wrapper.v:600.59-600.82
557 uext 7 57 0 RTL.RTL__DOT__scoreboard_2_ ; wrapper.v:398.12-427.2|wrapper.v:600.253-600.276
558 uext 7 55 0 RTL.RTL__DOT__scoreboard_1_ ; wrapper.v:398.12-427.2|wrapper.v:600.102-600.125
559 uext 7 53 0 RTL.RTL__DOT__scoreboard_0_ ; wrapper.v:398.12-427.2|wrapper.v:600.145-600.168
560 uext 1 51 0 RTL.RTL__DOT__registers_3_ ; wrapper.v:398.12-427.2|wrapper.v:600.404-600.426
561 uext 1 49 0 RTL.RTL__DOT__registers_2_ ; wrapper.v:398.12-427.2|wrapper.v:600.707-600.729
562 uext 1 47 0 RTL.RTL__DOT__registers_1_ ; wrapper.v:398.12-427.2|wrapper.v:600.665-600.687
563 uext 1 45 0 RTL.RTL__DOT__registers_0_ ; wrapper.v:398.12-427.2|wrapper.v:600.585-600.607
564 uext 10 11 0 RTL.RTL__DOT__inst_valid ; wrapper.v:398.12-427.2|wrapper.v:600.441-600.461
565 uext 10 42 0 RTL.RTL__DOT__inst_ready ; wrapper.v:398.12-427.2|wrapper.v:600.213-600.233
566 uext 1 9 0 RTL.RTL__DOT__inst ; wrapper.v:398.12-427.2|wrapper.v:600.370-600.384
567 uext 10 21 0 RTL.RTL__DOT__id_ex_valid ; wrapper.v:398.12-427.2|wrapper.v:600.291-600.312
568 uext 10 37 0 RTL.RTL__DOT__id_ex_reg_wen ; wrapper.v:398.12-427.2|wrapper.v:600.506-600.529
569 uext 7 35 0 RTL.RTL__DOT__id_ex_rd ; wrapper.v:398.12-427.2|wrapper.v:600.627-600.645
570 uext 10 24 0 RTL.RTL__DOT__ex_wb_valid ; wrapper.v:398.12-427.2|wrapper.v:600.544-600.565
571 uext 10 32 0 RTL.RTL__DOT__ex_wb_reg_wen ; wrapper.v:398.12-427.2|wrapper.v:600.327-600.350
572 uext 7 30 0 RTL.RTL__DOT__ex_wb_rd ; wrapper.v:398.12-427.2|wrapper.v:600.21-600.39
573 uext 10 28 0 RTL.RTL__DOT__ex_go ; wrapper.v:398.12-427.2|wrapper.v:600.476-600.491
574 uext 10 195 0 __ILA_simplePipe_decode_of_SET__ ; wrapper.v:245.28-245.60
575 uext 10 80 0 __ILA_simplePipe_valid__ ; wrapper.v:246.28-246.52
576 uext 10 80 0 __ISSUE__ ; wrapper.v:247.28-247.37
577 uext 10 270 0 __auxvar0__recorder_sn_cond ; wrapper.v:261.17-261.44
578 uext 1 45 0 __auxvar0__recorder_sn_value ; wrapper.v:262.17-262.45
579 uext 10 270 0 __auxvar1__recorder_sn_cond ; wrapper.v:263.17-263.44
580 uext 1 47 0 __auxvar1__recorder_sn_value ; wrapper.v:264.17-264.45
581 uext 10 270 0 __auxvar2__recorder_sn_cond ; wrapper.v:265.17-265.44
582 uext 1 49 0 __auxvar2__recorder_sn_value ; wrapper.v:266.17-266.45
583 uext 10 270 0 __auxvar3__recorder_sn_cond ; wrapper.v:267.17-267.44
584 uext 1 51 0 __auxvar3__recorder_sn_value ; wrapper.v:268.17-268.45
585 ite 10 28 63 21
586 ite 10 420 11 585
587 ite 10 19 63 586
588 next 10 21 587
589 ite 10 61 63 24
590 and 10 21 22
591 ite 10 28 590 589
592 ite 10 19 63 591
593 next 10 24 592
594 ite 7 28 35 30
595 ite 7 19 30 594
596 next 7 30 595
597 ite 10 28 37 32
598 ite 10 19 63 597
599 next 10 32 598
600 ite 7 420 417 35
601 ite 7 19 35 600
602 next 7 35 601
603 ite 10 420 415 37
604 ite 10 19 63 603
605 next 10 37 604
606 input 1
607 and 10 61 32
608 ite 1 607 397 606
609 input 7
610 ite 7 607 30 609
611 slice 10 610 0 0
612 eq 10 611 63
613 slice 10 610 1 1
614 eq 10 613 63
615 and 10 612 614
616 ite 10 607 80 63
617 and 10 615 616
618 ite 1 617 608 45
619 next 1 45 618
620 eq 10 611 80
621 and 10 620 614
622 and 10 621 616
623 ite 1 622 608 47
624 next 1 47 623
625 eq 10 613 80
626 and 10 612 625
627 and 10 626 616
628 ite 1 627 608 49
629 next 1 49 628
630 and 10 620 625
631 and 10 630 616
632 ite 1 631 608 51
633 next 1 51 632
634 ite 7 19 389 456
635 next 7 53 634
636 ite 7 19 389 444
637 next 7 55 636
638 ite 7 19 389 432
639 next 7 57 638
640 ite 7 19 389 422
641 next 7 59 640
642 and 10 77 75
643 not 10 64
644 and 10 642 643
645 ite 10 644 80 64
646 ite 10 20 63 645
647 next 10 64 646
648 uext 1 80 7
649 add 1 68 648
650 const 1 10001001
651 ult 10 68 650
652 and 10 204 651
653 ite 1 652 649 68
654 ite 1 20 67 653
655 next 1 68 654
656 ite 10 211 80 63
657 ite 10 20 63 656
658 next 10 71 657
659 ite 10 97 80 73
660 ite 10 20 63 659
661 next 10 73 660
662 ite 10 85 80 77
663 ite 10 20 63 662
664 next 10 77 663
665 ite 10 20 80 81
666 next 10 81 665
667 ite 1 195 361 87
668 ite 1 97 667 87
669 ite 1 20 5 668
670 next 1 87 669
671 ite 1 195 379 89
672 ite 1 97 671 89
673 ite 1 20 4 672
674 next 1 89 673
675 ite 1 195 374 91
676 ite 1 97 675 91
677 ite 1 20 3 676
678 next 1 91 677
679 ite 1 195 370 93
680 ite 1 97 679 93
681 ite 1 20 2 680
682 next 1 93 681
683 ite 10 204 63 97
684 ite 10 20 80 683
685 next 10 97 684
686 ite 1 20 14 109
687 next 1 109 686
688 ite 1 20 15 116
689 next 1 116 688
690 ite 1 20 16 124
691 next 1 124 690
692 ite 1 20 17 132
693 next 1 132 692
694 ite 10 270 80 205
695 ite 10 20 63 694
696 next 10 205 695
697 ite 10 61 63 209
698 ite 10 337 80 697
699 ite 10 20 63 698
700 next 10 209 699
701 ite 10 270 80 217
702 ite 10 20 63 701
703 next 10 217 702
704 ite 10 270 80 226
705 ite 10 20 63 704
706 next 10 226 705
707 ite 10 270 80 235
708 ite 10 20 63 707
709 next 10 235 708
710 ite 1 270 45 255
711 ite 1 20 255 710
712 next 1 255 711
713 ite 1 270 47 259
714 ite 1 20 259 713
715 next 1 259 714
716 ite 1 270 49 263
717 ite 1 20 263 716
718 next 1 263 717
719 ite 1 270 51 267
720 ite 1 20 267 719
721 next 1 267 720
722 ite 10 28 63 328
723 ite 10 97 80 722
724 ite 10 20 63 723
725 next 10 328 724
726 uext 1 80 7
727 add 1 394 726
728 uext 1 80 7
729 ugte 10 394 728
730 const 1 11111111
731 ult 10 394 730
732 and 10 729 731
733 ite 1 732 727 394
734 const 1 00000001
735 ite 1 195 734 733
736 ite 1 97 735 394
737 ite 1 20 67 736
738 next 1 394 737
739 ite 1 28 522 397
740 ite 1 19 397 739
741 next 1 397 740
742 ite 1 420 540 510
743 ite 1 19 510 742
744 next 1 510 743
745 ite 1 420 528 511
746 ite 1 19 511 745
747 next 1 511 746
748 ite 7 420 409 514
749 ite 7 19 514 748
750 next 7 514 749
751 bad 352
; end of yosys output
