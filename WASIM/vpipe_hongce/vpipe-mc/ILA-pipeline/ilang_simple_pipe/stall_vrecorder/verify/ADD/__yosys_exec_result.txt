
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12+36 (git sha1 7608985d2, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os)


-- Executing script file `gen_btor.ys' --

1. Executing Verilog-2005 frontend: wrapper.v
Parsing SystemVerilog input from `wrapper.v' to AST representation.
Generating RTLIL representation for module `\wrapper'.
Generating RTLIL representation for module `\simplePipe__DOT__ADD'.
Generating RTLIL representation for module `\pipeline_v'.
Warning: Replacing memory \scoreboard with list of registers. See wrapper.v:751
Successfully finished Verilog frontend.

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     \pipeline_v
Used module:     \simplePipe__DOT__ADD

2.1.2. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     \pipeline_v
Used module:     \simplePipe__DOT__ADD
Removed 0 unused modules.
Module wrapper directly or indirectly contains formal properties -> setting "keep" attribute.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\wrapper.$proc$wrapper.v:451$272'.
Cleaned up 1 empty switch.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$wrapper.v:0$408 in module pipeline_v.
Marked 1 switch rules as full_case in process $proc$wrapper.v:0$408 in module pipeline_v.
Removed 1 dead cases from process $proc$wrapper.v:0$405 in module pipeline_v.
Marked 1 switch rules as full_case in process $proc$wrapper.v:0$405 in module pipeline_v.
Marked 1 switch rules as full_case in process $proc$wrapper.v:897$359 in module pipeline_v.
Marked 2 switch rules as full_case in process $proc$wrapper.v:866$354 in module pipeline_v.
Marked 2 switch rules as full_case in process $proc$wrapper.v:819$336 in module pipeline_v.
Marked 1 switch rules as full_case in process $proc$wrapper.v:769$310 in module pipeline_v.
Marked 1 switch rules as full_case in process $proc$wrapper.v:749$304 in module pipeline_v.
Marked 2 switch rules as full_case in process $proc$wrapper.v:590$295 in module simplePipe__DOT__ADD.
Marked 5 switch rules as full_case in process $proc$wrapper.v:451$272 in module wrapper.
Marked 1 switch rules as full_case in process $proc$wrapper.v:339$10 in module wrapper.
Marked 1 switch rules as full_case in process $proc$wrapper.v:335$9 in module wrapper.
Marked 1 switch rules as full_case in process $proc$wrapper.v:331$8 in module wrapper.
Marked 1 switch rules as full_case in process $proc$wrapper.v:327$6 in module wrapper.
Marked 1 switch rules as full_case in process $proc$wrapper.v:323$1 in module wrapper.
Removed a total of 2 dead cases.

2.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 13 assignments to connections.

2.2.4. Executing PROC_INIT pass (extract init attributes).

2.2.5. Executing PROC_ARST pass (detect async resets in processes).

2.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\pipeline_v.$proc$wrapper.v:0$408'.
     1/1: $1$mem2reg_rd$\scoreboard$wrapper.v:794$302_DATA[1:0]$410
Creating decoders for process `\pipeline_v.$proc$wrapper.v:0$405'.
     1/1: $1$mem2reg_rd$\scoreboard$wrapper.v:793$301_DATA[1:0]$407
Creating decoders for process `\pipeline_v.$proc$wrapper.v:0$372'.
Creating decoders for process `\pipeline_v.$proc$wrapper.v:897$359'.
     1/3: $1$memwr$\registers$wrapper.v:899$303_EN[7:0]$366
     2/3: $1$memwr$\registers$wrapper.v:899$303_DATA[7:0]$365
     3/3: $1$memwr$\registers$wrapper.v:899$303_ADDR[1:0]$364
Creating decoders for process `\pipeline_v.$proc$wrapper.v:866$354'.
     1/5: $0\ex_wb_valid[0:0]
     2/5: $0\ex_wb_reg_wen[0:0]
     3/5: $0\ex_wb_rd[1:0]
     4/5: $0\ex_wb_val[7:0]
     5/5: $0\ex_wb_inst[7:0]
Creating decoders for process `\pipeline_v.$proc$wrapper.v:819$336'.
     1/7: $0\id_ex_valid[0:0]
     2/7: $0\id_ex_reg_wen[0:0]
     3/7: $0\id_ex_rd[1:0]
     4/7: $0\id_ex_op[1:0]
     5/7: $0\id_ex_operand2[7:0]
     6/7: $0\id_ex_operand1[7:0]
     7/7: $0\id_ex_inst[7:0]
Creating decoders for process `\pipeline_v.$proc$wrapper.v:769$310'.
     1/2: $0\if_id_valid[0:0]
     2/2: $0\if_id_inst[7:0]
Creating decoders for process `\pipeline_v.$proc$wrapper.v:749$304'.
     1/4: $0\scoreboard[3][1:0]
     2/4: $0\scoreboard[2][1:0]
     3/4: $0\scoreboard[1][1:0]
     4/4: $0\scoreboard[0][1:0]
Creating decoders for process `\simplePipe__DOT__ADD.$proc$wrapper.v:590$295'.
     1/5: $0\__COUNTER_start__n3[7:0]
     2/5: $0\r3[7:0]
     3/5: $0\r2[7:0]
     4/5: $0\r1[7:0]
     5/5: $0\r0[7:0]
Creating decoders for process `\wrapper.$proc$wrapper.v:451$272'.
     1/16: $0\__auxvar3__recorder[7:0]
     2/16: $0\__auxvar2__recorder[7:0]
     3/16: $0\__auxvar1__recorder[7:0]
     4/16: $0\__auxvar0__recorder[7:0]
     5/16: $0\stage_tracker_wb_iuv[0:0]
     6/16: $0\stage_tracker_ex_wb_iuv[0:0]
     7/16: $0\stage_tracker_id_ex_iuv[0:0]
     8/16: $0\stage_tracker_if_id_iuv[0:0]
     9/16: $0\__auxvar3__recorder_sn_condmet[0:0]
    10/16: $0\__auxvar3__recorder_sn_vhold[7:0]
    11/16: $0\__auxvar2__recorder_sn_condmet[0:0]
    12/16: $0\__auxvar2__recorder_sn_vhold[7:0]
    13/16: $0\__auxvar1__recorder_sn_condmet[0:0]
    14/16: $0\__auxvar1__recorder_sn_vhold[7:0]
    15/16: $0\__auxvar0__recorder_sn_condmet[0:0]
    16/16: $0\__auxvar0__recorder_sn_vhold[7:0]
Creating decoders for process `\wrapper.$proc$wrapper.v:343$17'.
     1/1: $0\__RESETED__[0:0]
Creating decoders for process `\wrapper.$proc$wrapper.v:339$10'.
     1/1: $0\__2ndENDED__[0:0]
Creating decoders for process `\wrapper.$proc$wrapper.v:335$9'.
     1/1: $0\__ENDED__[0:0]
Creating decoders for process `\wrapper.$proc$wrapper.v:331$8'.
     1/1: $0\__STARTED__[0:0]
Creating decoders for process `\wrapper.$proc$wrapper.v:327$6'.
     1/1: $0\__START__[0:0]
Creating decoders for process `\wrapper.$proc$wrapper.v:323$1'.
     1/1: $0\__CYCLE_CNT__[7:0]

2.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\pipeline_v.$mem2reg_rd$\scoreboard$wrapper.v:794$302_DATA' from process `\pipeline_v.$proc$wrapper.v:0$408'.
No latch inferred for signal `\pipeline_v.$mem2reg_rd$\scoreboard$wrapper.v:793$301_DATA' from process `\pipeline_v.$proc$wrapper.v:0$405'.
No latch inferred for signal `\pipeline_v.\scoreboard_nxt[0]' from process `\pipeline_v.$proc$wrapper.v:0$372'.
No latch inferred for signal `\pipeline_v.\scoreboard_nxt[1]' from process `\pipeline_v.$proc$wrapper.v:0$372'.
No latch inferred for signal `\pipeline_v.\scoreboard_nxt[2]' from process `\pipeline_v.$proc$wrapper.v:0$372'.
No latch inferred for signal `\pipeline_v.\scoreboard_nxt[3]' from process `\pipeline_v.$proc$wrapper.v:0$372'.

2.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\pipeline_v.$memwr$\registers$wrapper.v:899$303_ADDR' using process `\pipeline_v.$proc$wrapper.v:897$359'.
  created $dff cell `$procdff$677' with positive edge clock.
Creating register for signal `\pipeline_v.$memwr$\registers$wrapper.v:899$303_DATA' using process `\pipeline_v.$proc$wrapper.v:897$359'.
  created $dff cell `$procdff$678' with positive edge clock.
Creating register for signal `\pipeline_v.$memwr$\registers$wrapper.v:899$303_EN' using process `\pipeline_v.$proc$wrapper.v:897$359'.
  created $dff cell `$procdff$679' with positive edge clock.
Creating register for signal `\pipeline_v.\ex_wb_inst' using process `\pipeline_v.$proc$wrapper.v:866$354'.
  created $dff cell `$procdff$680' with positive edge clock.
Creating register for signal `\pipeline_v.\ex_wb_val' using process `\pipeline_v.$proc$wrapper.v:866$354'.
  created $dff cell `$procdff$681' with positive edge clock.
Creating register for signal `\pipeline_v.\ex_wb_rd' using process `\pipeline_v.$proc$wrapper.v:866$354'.
  created $dff cell `$procdff$682' with positive edge clock.
Creating register for signal `\pipeline_v.\ex_wb_reg_wen' using process `\pipeline_v.$proc$wrapper.v:866$354'.
  created $dff cell `$procdff$683' with positive edge clock.
Creating register for signal `\pipeline_v.\ex_wb_valid' using process `\pipeline_v.$proc$wrapper.v:866$354'.
  created $dff cell `$procdff$684' with positive edge clock.
Creating register for signal `\pipeline_v.\id_ex_inst' using process `\pipeline_v.$proc$wrapper.v:819$336'.
  created $dff cell `$procdff$685' with positive edge clock.
Creating register for signal `\pipeline_v.\id_ex_operand1' using process `\pipeline_v.$proc$wrapper.v:819$336'.
  created $dff cell `$procdff$686' with positive edge clock.
Creating register for signal `\pipeline_v.\id_ex_operand2' using process `\pipeline_v.$proc$wrapper.v:819$336'.
  created $dff cell `$procdff$687' with positive edge clock.
Creating register for signal `\pipeline_v.\id_ex_op' using process `\pipeline_v.$proc$wrapper.v:819$336'.
  created $dff cell `$procdff$688' with positive edge clock.
Creating register for signal `\pipeline_v.\id_ex_rd' using process `\pipeline_v.$proc$wrapper.v:819$336'.
  created $dff cell `$procdff$689' with positive edge clock.
Creating register for signal `\pipeline_v.\id_ex_reg_wen' using process `\pipeline_v.$proc$wrapper.v:819$336'.
  created $dff cell `$procdff$690' with positive edge clock.
Creating register for signal `\pipeline_v.\id_ex_valid' using process `\pipeline_v.$proc$wrapper.v:819$336'.
  created $dff cell `$procdff$691' with positive edge clock.
Creating register for signal `\pipeline_v.\if_id_inst' using process `\pipeline_v.$proc$wrapper.v:769$310'.
  created $dff cell `$procdff$692' with positive edge clock.
Creating register for signal `\pipeline_v.\if_id_valid' using process `\pipeline_v.$proc$wrapper.v:769$310'.
  created $dff cell `$procdff$693' with positive edge clock.
Creating register for signal `\pipeline_v.\scoreboard[0]' using process `\pipeline_v.$proc$wrapper.v:749$304'.
  created $dff cell `$procdff$694' with positive edge clock.
Creating register for signal `\pipeline_v.\scoreboard[1]' using process `\pipeline_v.$proc$wrapper.v:749$304'.
  created $dff cell `$procdff$695' with positive edge clock.
Creating register for signal `\pipeline_v.\scoreboard[2]' using process `\pipeline_v.$proc$wrapper.v:749$304'.
  created $dff cell `$procdff$696' with positive edge clock.
Creating register for signal `\pipeline_v.\scoreboard[3]' using process `\pipeline_v.$proc$wrapper.v:749$304'.
  created $dff cell `$procdff$697' with positive edge clock.
Creating register for signal `\simplePipe__DOT__ADD.\r0' using process `\simplePipe__DOT__ADD.$proc$wrapper.v:590$295'.
  created $dff cell `$procdff$698' with positive edge clock.
Creating register for signal `\simplePipe__DOT__ADD.\r1' using process `\simplePipe__DOT__ADD.$proc$wrapper.v:590$295'.
  created $dff cell `$procdff$699' with positive edge clock.
Creating register for signal `\simplePipe__DOT__ADD.\r2' using process `\simplePipe__DOT__ADD.$proc$wrapper.v:590$295'.
  created $dff cell `$procdff$700' with positive edge clock.
Creating register for signal `\simplePipe__DOT__ADD.\r3' using process `\simplePipe__DOT__ADD.$proc$wrapper.v:590$295'.
  created $dff cell `$procdff$701' with positive edge clock.
Creating register for signal `\simplePipe__DOT__ADD.\__COUNTER_start__n3' using process `\simplePipe__DOT__ADD.$proc$wrapper.v:590$295'.
  created $dff cell `$procdff$702' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar0__recorder' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$703' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar0__recorder_sn_vhold' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$704' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar0__recorder_sn_condmet' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$705' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar1__recorder' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$706' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar1__recorder_sn_vhold' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$707' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar1__recorder_sn_condmet' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$708' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar2__recorder' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$709' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar2__recorder_sn_vhold' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$710' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar2__recorder_sn_condmet' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$711' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar3__recorder' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$712' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar3__recorder_sn_vhold' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$713' with positive edge clock.
Creating register for signal `\wrapper.\__auxvar3__recorder_sn_condmet' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$714' with positive edge clock.
Creating register for signal `\wrapper.\stage_tracker_if_id_iuv' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$715' with positive edge clock.
Creating register for signal `\wrapper.\stage_tracker_id_ex_iuv' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$716' with positive edge clock.
Creating register for signal `\wrapper.\stage_tracker_ex_wb_iuv' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$717' with positive edge clock.
Creating register for signal `\wrapper.\stage_tracker_wb_iuv' using process `\wrapper.$proc$wrapper.v:451$272'.
  created $dff cell `$procdff$718' with positive edge clock.
Creating register for signal `\wrapper.\__RESETED__' using process `\wrapper.$proc$wrapper.v:343$17'.
  created $dff cell `$procdff$719' with positive edge clock.
Creating register for signal `\wrapper.\__2ndENDED__' using process `\wrapper.$proc$wrapper.v:339$10'.
  created $dff cell `$procdff$720' with positive edge clock.
Creating register for signal `\wrapper.\__ENDED__' using process `\wrapper.$proc$wrapper.v:335$9'.
  created $dff cell `$procdff$721' with positive edge clock.
Creating register for signal `\wrapper.\__STARTED__' using process `\wrapper.$proc$wrapper.v:331$8'.
  created $dff cell `$procdff$722' with positive edge clock.
Creating register for signal `\wrapper.\__START__' using process `\wrapper.$proc$wrapper.v:327$6'.
  created $dff cell `$procdff$723' with positive edge clock.
Creating register for signal `\wrapper.\__CYCLE_CNT__' using process `\wrapper.$proc$wrapper.v:323$1'.
  created $dff cell `$procdff$724' with positive edge clock.

2.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\pipeline_v.$proc$wrapper.v:0$408'.
Removing empty process `pipeline_v.$proc$wrapper.v:0$408'.
Found and cleaned up 1 empty switch in `\pipeline_v.$proc$wrapper.v:0$405'.
Removing empty process `pipeline_v.$proc$wrapper.v:0$405'.
Removing empty process `pipeline_v.$proc$wrapper.v:0$372'.
Found and cleaned up 1 empty switch in `\pipeline_v.$proc$wrapper.v:897$359'.
Removing empty process `pipeline_v.$proc$wrapper.v:897$359'.
Found and cleaned up 3 empty switches in `\pipeline_v.$proc$wrapper.v:866$354'.
Removing empty process `pipeline_v.$proc$wrapper.v:866$354'.
Found and cleaned up 3 empty switches in `\pipeline_v.$proc$wrapper.v:819$336'.
Removing empty process `pipeline_v.$proc$wrapper.v:819$336'.
Found and cleaned up 3 empty switches in `\pipeline_v.$proc$wrapper.v:769$310'.
Removing empty process `pipeline_v.$proc$wrapper.v:769$310'.
Found and cleaned up 1 empty switch in `\pipeline_v.$proc$wrapper.v:749$304'.
Removing empty process `pipeline_v.$proc$wrapper.v:749$304'.
Found and cleaned up 8 empty switches in `\simplePipe__DOT__ADD.$proc$wrapper.v:590$295'.
Removing empty process `simplePipe__DOT__ADD.$proc$wrapper.v:590$295'.
Found and cleaned up 13 empty switches in `\wrapper.$proc$wrapper.v:451$272'.
Removing empty process `wrapper.$proc$wrapper.v:451$272'.
Found and cleaned up 1 empty switch in `\wrapper.$proc$wrapper.v:343$17'.
Removing empty process `wrapper.$proc$wrapper.v:343$17'.
Found and cleaned up 2 empty switches in `\wrapper.$proc$wrapper.v:339$10'.
Removing empty process `wrapper.$proc$wrapper.v:339$10'.
Found and cleaned up 2 empty switches in `\wrapper.$proc$wrapper.v:335$9'.
Removing empty process `wrapper.$proc$wrapper.v:335$9'.
Found and cleaned up 2 empty switches in `\wrapper.$proc$wrapper.v:331$8'.
Removing empty process `wrapper.$proc$wrapper.v:331$8'.
Found and cleaned up 2 empty switches in `\wrapper.$proc$wrapper.v:327$6'.
Removing empty process `wrapper.$proc$wrapper.v:327$6'.
Found and cleaned up 2 empty switches in `\wrapper.$proc$wrapper.v:323$1'.
Removing empty process `wrapper.$proc$wrapper.v:323$1'.
Cleaned up 45 empty switches.

2.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pipeline_v.
<suppressed ~14 debug messages>
Optimizing module simplePipe__DOT__ADD.
<suppressed ~4 debug messages>
Optimizing module wrapper.
<suppressed ~22 debug messages>

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module pipeline_v.
Optimizing module simplePipe__DOT__ADD.
Optimizing module wrapper.

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pipeline_v..
Finding unused cells or wires in module \simplePipe__DOT__ADD..
Finding unused cells or wires in module \wrapper..
Removed 20 unused cells and 308 unused wires.
<suppressed ~25 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
Checking module pipeline_v...
Checking module simplePipe__DOT__ADD...
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [7] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [6] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [5] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [4] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [3] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [2] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [1] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [0] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [7] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [6] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [5] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [4] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [3] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [2] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [1] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [0] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [7] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [6] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [5] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [4] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [3] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [2] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [1] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [0] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [7] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [6] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [5] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [4] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [3] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [2] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [1] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [0] is used but has no driver.
Checking module wrapper...
Found and reported 32 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pipeline_v.
Optimizing module simplePipe__DOT__ADD.
Optimizing module wrapper.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pipeline_v'.
<suppressed ~6 debug messages>
Finding identical cells in module `\simplePipe__DOT__ADD'.
Finding identical cells in module `\wrapper'.
<suppressed ~228 debug messages>
Removed a total of 78 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pipeline_v..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simplePipe__DOT__ADD..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~51 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pipeline_v.
    Consolidated identical input bits for $mux cell $procmux$422:
      Old ports: A=8'00000000, B=8'11111111, Y=$0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362
      New ports: A=1'0, B=1'1, Y=$0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362 [0]
      New connections: $0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362 [7:1] = { $0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362 [0] $0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362 [0] $0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362 [0] $0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362 [0] $0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362 [0] $0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362 [0] $0$memwr$\registers$wrapper.v:899$303_EN[7:0]$362 [0] }
  Optimizing cells in module \pipeline_v.
  Optimizing cells in module \simplePipe__DOT__ADD.
  Optimizing cells in module \wrapper.
Performed a total of 1 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pipeline_v'.
Finding identical cells in module `\simplePipe__DOT__ADD'.
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

2.6.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pipeline_v..
Finding unused cells or wires in module \simplePipe__DOT__ADD..
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 75 unused wires.
<suppressed ~2 debug messages>

2.6.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module pipeline_v.
Optimizing module simplePipe__DOT__ADD.
Optimizing module wrapper.

2.6.8. Rerunning OPT passes. (Maybe there is more to do..)

2.6.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pipeline_v..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simplePipe__DOT__ADD..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~51 debug messages>

2.6.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pipeline_v.
  Optimizing cells in module \simplePipe__DOT__ADD.
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

2.6.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pipeline_v'.
Finding identical cells in module `\simplePipe__DOT__ADD'.
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

2.6.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pipeline_v..
Finding unused cells or wires in module \simplePipe__DOT__ADD..
Finding unused cells or wires in module \wrapper..

2.6.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module pipeline_v.
Optimizing module simplePipe__DOT__ADD.
Optimizing module wrapper.

2.6.14. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 30 address bits (of 32) from memory read port pipeline_v.$memrd$\registers$wrapper.v:921$368 (registers).
Removed top 30 address bits (of 32) from memory read port pipeline_v.$memrd$\registers$wrapper.v:922$369 (registers).
Removed top 30 address bits (of 32) from memory read port pipeline_v.$memrd$\registers$wrapper.v:923$370 (registers).
Removed top 30 address bits (of 32) from memory read port pipeline_v.$memrd$\registers$wrapper.v:930$371 (registers).
Removed top 1 bits (of 2) from port B of cell pipeline_v.$eq$wrapper.v:791$313 ($eq).
Removed top 1 bits (of 2) from port B of cell pipeline_v.$eq$wrapper.v:799$321 ($eq).
Removed top 1 bits (of 2) from port B of cell pipeline_v.$eq$wrapper.v:803$325 ($eq).
Removed top 1 bits (of 2) from port B of cell pipeline_v.$eq$wrapper.v:845$339 ($eq).
Removed top 1 bits (of 2) from port B of cell pipeline_v.$eq$wrapper.v:725$381 ($eq).
Removed top 1 bits (of 2) from port B of cell pipeline_v.$eq$wrapper.v:729$385 ($eq).
Removed top 1 bits (of 2) from port B of cell pipeline_v.$procmux$414_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell pipeline_v.$procmux$419_CMP0 ($eq).
Removed top 4 bits (of 8) from wire pipeline_v.immd.
Removed top 1 bits (of 2) from port B of cell simplePipe__DOT__ADD.$eq$wrapper.v:561$273 ($eq).
Removed top 1 bits (of 2) from port B of cell simplePipe__DOT__ADD.$eq$wrapper.v:568$276 ($eq).
Removed top 1 bits (of 2) from port B of cell simplePipe__DOT__ADD.$eq$wrapper.v:576$282 ($eq).
Removed top 1 bits (of 2) from port B of cell simplePipe__DOT__ADD.$eq$wrapper.v:583$289 ($eq).
Removed top 31 bits (of 32) from port B of cell simplePipe__DOT__ADD.$ge$wrapper.v:601$297 ($ge).
Removed top 24 bits (of 32) from port B of cell simplePipe__DOT__ADD.$lt$wrapper.v:601$298 ($lt).
Removed top 31 bits (of 32) from port B of cell simplePipe__DOT__ADD.$add$wrapper.v:602$300 ($add).
Removed top 24 bits (of 32) from port Y of cell simplePipe__DOT__ADD.$add$wrapper.v:602$300 ($add).
Removed top 24 bits (of 32) from wire simplePipe__DOT__ADD.$add$wrapper.v:602$300_Y.
Removed top 4 bits (of 8) from wire simplePipe__DOT__ADD.n22.
Removed top 24 bits (of 32) from port B of cell wrapper.$lt$wrapper.v:325$3 ($lt).
Removed top 31 bits (of 32) from port B of cell wrapper.$add$wrapper.v:325$5 ($add).
Removed top 24 bits (of 32) from port Y of cell wrapper.$add$wrapper.v:325$5 ($add).
Removed top 1 bits (of 2) from port B of cell wrapper.$eq$wrapper.v:382$64 ($eq).
Removed top 1 bits (of 2) from port B of cell wrapper.$eq$wrapper.v:383$68 ($eq).
Removed top 24 bits (of 32) from wire wrapper.$add$wrapper.v:325$5_Y.

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pipeline_v..
Finding unused cells or wires in module \simplePipe__DOT__ADD..
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

2.9. Executing MEMORY_COLLECT pass (generating $mem cells).

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pipeline_v.
Optimizing module simplePipe__DOT__ADD.
Optimizing module wrapper.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pipeline_v'.
Finding identical cells in module `\simplePipe__DOT__ADD'.
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

2.10.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pipeline_v..
Finding unused cells or wires in module \simplePipe__DOT__ADD..
Finding unused cells or wires in module \wrapper..

2.10.4. Finished fast OPT passes.

2.11. Printing statistics.

=== pipeline_v ===

   Number of wires:                169
   Number of wire bits:            461
   Number of public wires:          79
   Number of public wire bits:     248
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                132
     $add                            1
     $and                            2
     $dff                           16
     $eq                            20
     $logic_and                     16
     $logic_not                     10
     $logic_or                       5
     $mem_v2                         1
     $mux                           57
     $not                            2
     $pmux                           2

=== simplePipe__DOT__ADD ===

   Number of wires:                 66
   Number of wire bits:            343
   Number of public wires:          45
   Number of public wire bits:     196
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 47
     $add                            2
     $dff                            5
     $eq                             8
     $ge                             1
     $logic_and                      1
     $logic_not                      3
     $lt                             1
     $mux                           26

=== wrapper ===

   Number of wires:                277
   Number of wire bits:            592
   Number of public wires:         118
   Number of public wire bits:     328
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                228
     $add                            1
     $assert                         2
     $assume                         1
     $dff                           22
     $eq                            31
     $logic_and                     68
     $logic_not                     19
     $logic_or                      38
     $lt                             1
     $mux                           42
     $not                            1
     pipeline_v                      1
     simplePipe__DOT__ADD            1

=== design hierarchy ===

   wrapper                           1
     pipeline_v                      1
     simplePipe__DOT__ADD            1

   Number of wires:                512
   Number of wire bits:           1396
   Number of public wires:         242
   Number of public wire bits:     772
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                405
     $add                            4
     $and                            2
     $assert                         2
     $assume                         1
     $dff                           43
     $eq                            59
     $ge                             1
     $logic_and                     85
     $logic_not                     32
     $logic_or                      43
     $lt                             2
     $mem_v2                         1
     $mux                          125
     $not                            3
     $pmux                           2

2.12. Executing CHECK pass (checking for obvious problems).
Checking module pipeline_v...
Checking module simplePipe__DOT__ADD...
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [7] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [6] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [5] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [4] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [3] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [2] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [1] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r0_randinit [0] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [7] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [6] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [5] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [4] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [3] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [2] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [1] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r1_randinit [0] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [7] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [6] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [5] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [4] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [3] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [2] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [1] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r2_randinit [0] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [7] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [6] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [5] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [4] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [3] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [2] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [1] is used but has no driver.
Warning: Wire simplePipe__DOT__ADD.\r3_randinit [0] is used but has no driver.
Checking module wrapper...
Found and reported 32 problems.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     \simplePipe__DOT__ADD
Used module:     \pipeline_v

3.2. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     \simplePipe__DOT__ADD
Used module:     \pipeline_v
Removed 0 unused modules.
Module wrapper directly or indirectly contains formal properties -> setting "keep" attribute.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8. Executing PROC_DFF pass (convert process syncs to FFs).

4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module pipeline_v.
Optimizing module simplePipe__DOT__ADD.
Optimizing module wrapper.

5. Executing MEMORY pass.

5.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing pipeline_v.registers write port 0.

5.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\registers'[0] in module `\pipeline_v': no output FF found.
Checking read port `\registers'[1] in module `\pipeline_v': no output FF found.
Checking read port `\registers'[2] in module `\pipeline_v': no output FF found.
Checking read port `\registers'[3] in module `\pipeline_v': no output FF found.
Checking read port `\registers'[4] in module `\pipeline_v': no output FF found.
Checking read port `\registers'[5] in module `\pipeline_v': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\registers'[6] in module `\pipeline_v': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port address `\registers'[0] in module `\pipeline_v': no address FF found.
Checking read port address `\registers'[1] in module `\pipeline_v': no address FF found.
Checking read port address `\registers'[2] in module `\pipeline_v': no address FF found.
Checking read port address `\registers'[3] in module `\pipeline_v': no address FF found.
Checking read port address `\registers'[4] in module `\pipeline_v': no address FF found.
Checking read port address `\registers'[5] in module `\pipeline_v': merged address FF to cell.
Checking read port address `\registers'[6] in module `\pipeline_v': merged address FF to cell.

5.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pipeline_v..
Finding unused cells or wires in module \simplePipe__DOT__ADD..
Finding unused cells or wires in module \wrapper..

5.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory pipeline_v.registers by address:
  Merging ports 0, 3 (address 2'11).
  Merging ports 1, 2 (address 2'00).
Consolidating read ports of memory pipeline_v.registers by address:
  Merging ports 0, 1 (address 2'10).
Consolidating read ports of memory pipeline_v.registers by address:

5.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pipeline_v..
Finding unused cells or wires in module \simplePipe__DOT__ADD..
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

5.9. Executing MEMORY_COLLECT pass (generating $mem cells).

5.10. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \registers in module \pipeline_v:
  created 4 $dff cells and 0 static cells of width 8.
Extracted addr FF from read port 2 of pipeline_v.registers: $\registers$rdreg[2]
Extracted addr FF from read port 3 of pipeline_v.registers: $\registers$rdreg[3]
  read interface: 2 $dff and 9 $mux cells.
  write interface: 4 write mux blocks.

6. Executing FLATTEN pass (flatten design).
Deleting now unused module pipeline_v.
Deleting now unused module simplePipe__DOT__ADD.
<suppressed ~2 debug messages>

7. Executing SETUNDEF pass (replace undef values with defined constants).
Using default as -undef with -expose.
Exposing undriven wire \ILA.r0_randinit as input.
Exposing undriven wire \ILA.r1_randinit as input.
Exposing undriven wire \ILA.r2_randinit as input.
Exposing undriven wire \ILA.r3_randinit as input.

8. Executing SIM pass (simulate the circuit).
Simulating cycle 0.
Warning: Assert wrapper.normalassert (wrapper.v:443.1-443.54) failed.
Assumption wrapper.all_assume (wrapper.v:446.1-446.52) failed.
Warning: Assert wrapper.normalassert (wrapper.v:443.1-443.54) failed.
Assumption wrapper.all_assume (wrapper.v:446.1-446.52) failed.
Simulating cycle 1.
Assumption wrapper.all_assume (wrapper.v:446.1-446.52) failed.

9. Executing BTOR backend.

Warnings: 34 unique messages, 67 total
End of script. Logfile hash: 7eab35e8cf, CPU: user 0.15s system 0.00s, MEM: 15.29 MB peak
Yosys 0.12+36 (git sha1 7608985d2, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os)
Time spent: 22% 7x opt_expr (0 sec), 22% 7x opt_clean (0 sec), ...
