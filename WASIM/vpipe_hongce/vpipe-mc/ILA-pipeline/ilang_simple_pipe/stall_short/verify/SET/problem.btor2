; BTOR description generated by Yosys 0.12+36 (git sha1 7608985d2, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) for module wrapper.
1 sort bitvec 8
2 input 1 ILA.r3_randinit ; wrapper.v:259.22-271.2|wrapper.v:410.28-410.39
3 input 1 ILA.r2_randinit ; wrapper.v:259.22-271.2|wrapper.v:409.28-409.39
4 input 1 ILA.r1_randinit ; wrapper.v:259.22-271.2|wrapper.v:408.28-408.39
5 input 1 ILA.r0_randinit ; wrapper.v:259.22-271.2|wrapper.v:407.28-407.39
6 input 1 __ILA_I_inst ; wrapper.v:88.18-88.30
7 sort bitvec 2
8 input 7 __VLG_I_dummy_read_rf ; wrapper.v:89.18-89.39
9 input 1 __VLG_I_inst ; wrapper.v:90.18-90.30
10 sort bitvec 1
11 input 10 __VLG_I_inst_valid ; wrapper.v:91.18-91.36
12 input 10 __VLG_I_stallex ; wrapper.v:92.18-92.33
13 input 10 __VLG_I_stallwb ; wrapper.v:93.18-93.33
14 input 10 clk ; wrapper.v:94.18-94.21
15 input 10 dummy_reset ; wrapper.v:95.18-95.29
16 input 10 rst ; wrapper.v:96.18-96.21
17 input 1
18 state 1 RTL.id_ex_operand1
19 state 1 RTL.id_ex_operand2
20 and 1 18 19
21 not 1 20
22 state 7 RTL.id_ex_op
23 const 7 11
24 eq 10 22 23
25 ite 1 24 21 17
26 const 7 10
27 eq 10 22 26
28 ite 1 27 18 25
29 add 1 18 19
30 const 10 1
31 uext 7 30 1
32 eq 10 22 31
33 ite 1 32 29 28
34 output 33 RTL__DOT__ex_alu_result ; wrapper.v:97.19-97.42
35 state 10 RTL.id_ex_valid
36 not 10 12
37 not 10 13
38 state 10 RTL.ex_wb_valid
39 not 10 38
40 or 10 37 39
41 and 10 36 40
42 and 10 35 41
43 output 42 RTL__DOT__ex_go ; wrapper.v:98.19-98.34
44 state 7 RTL.ex_wb_rd
45 output 44 RTL__DOT__ex_wb_rd ; wrapper.v:99.19-99.37
46 state 10 RTL.ex_wb_reg_wen
47 output 46 RTL__DOT__ex_wb_reg_wen ; wrapper.v:100.19-100.42
48 state 1 RTL.ex_wb_val
49 output 48 RTL__DOT__ex_wb_val ; wrapper.v:101.19-101.38
50 output 38 RTL__DOT__ex_wb_valid ; wrapper.v:102.19-102.40
51 state 7 RTL.id_ex_rd
52 output 51 RTL__DOT__id_ex_rd ; wrapper.v:103.19-103.37
53 state 10 RTL.id_ex_reg_wen
54 output 53 RTL__DOT__id_ex_reg_wen ; wrapper.v:104.19-104.42
55 output 35 RTL__DOT__id_ex_valid ; wrapper.v:105.19-105.40
56 output 9 RTL__DOT__inst ; wrapper.v:106.19-106.33
57 not 10 35
58 or 10 41 57
59 output 58 RTL__DOT__inst_ready ; wrapper.v:107.19-107.39
60 output 11 RTL__DOT__inst_valid ; wrapper.v:108.19-108.39
61 sort array 7 1
62 state 61 RTL.registers
63 const 7 00
64 read 1 62 63
65 const 7 01
66 read 1 62 65
67 read 1 62 26
68 read 1 62 23
69 read 1 62 65
70 read 1 62 8
71 slice 7 9 3 2
72 read 1 62 71
73 slice 7 9 5 4
74 read 1 62 73
75 output 64 RTL__DOT__registers_0_ ; wrapper.v:109.19-109.41
76 output 69 RTL__DOT__registers_1_ ; wrapper.v:110.19-110.41
77 output 67 RTL__DOT__registers_2_ ; wrapper.v:111.19-111.41
78 output 68 RTL__DOT__registers_3_ ; wrapper.v:112.19-112.41
79 state 7 RTL.scoreboard[0]
80 output 79 RTL__DOT__scoreboard_0_ ; wrapper.v:113.19-113.42
81 state 7 RTL.scoreboard[1]
82 output 81 RTL__DOT__scoreboard_1_ ; wrapper.v:114.19-114.42
83 state 7 RTL.scoreboard[2]
84 output 83 RTL__DOT__scoreboard_2_ ; wrapper.v:115.19-115.42
85 state 7 RTL.scoreboard[3]
86 output 85 RTL__DOT__scoreboard_3_ ; wrapper.v:116.19-116.42
87 and 10 38 37
88 output 87 RTL__DOT__wb_go ; wrapper.v:117.19-117.34
89 const 10 0
90 state 10
91 init 10 90 89
92 output 90 __2ndENDED__ ; wrapper.v:159.23-159.35
93 const 1 00000000
94 state 1
95 init 1 94 93
96 output 94 __CYCLE_CNT__ ; wrapper.v:155.23-155.36
97 state 10
98 init 10 97 89
99 state 10
100 init 10 99 89
101 and 10 97 99
102 output 101 __EDCOND__ ; wrapper.v:118.19-118.29
103 state 10
104 init 10 103 89
105 output 103 __ENDED__ ; wrapper.v:158.23-158.32
106 state 10
107 init 10 106 30
108 and 10 101 106
109 not 10 103
110 and 10 108 109
111 output 110 __IEND__ ; wrapper.v:119.19-119.27
112 state 1 ILA.r0
113 output 112 __ILA_SO_r0 ; wrapper.v:120.19-120.30
114 state 1 ILA.r1
115 output 114 __ILA_SO_r1 ; wrapper.v:121.19-121.30
116 state 1 ILA.r2
117 output 116 __ILA_SO_r2 ; wrapper.v:122.19-122.30
118 state 1 ILA.r3
119 output 118 __ILA_SO_r3 ; wrapper.v:123.19-123.30
120 output 106 __RESETED__ ; wrapper.v:160.23-160.34
121 output 99 __STARTED__ ; wrapper.v:157.23-157.34
122 state 10
123 init 10 122 30
124 output 122 __START__ ; wrapper.v:156.23-156.32
125 output 70 __VLG_O_dummy_rf_data ; wrapper.v:124.19-124.40
126 output 58 __VLG_O_inst_ready ; wrapper.v:125.19-125.37
127 not 10 110
128 eq 10 79 26
129 and 10 122 128
130 not 10 129
131 eq 10 33 112
132 or 10 130 131
133 eq 10 79 23
134 and 10 122 133
135 and 10 130 134
136 not 10 135
137 or 10 136 131
138 and 10 132 137
139 and 10 130 136
140 uext 7 30 1
141 eq 10 79 140
142 and 10 122 141
143 and 10 139 142
144 not 10 143
145 eq 10 48 112
146 or 10 144 145
147 and 10 138 146
148 and 10 139 144
149 redor 10 79
150 not 10 149
151 and 10 122 150
152 and 10 148 151
153 not 10 152
154 eq 10 64 112
155 or 10 153 154
156 and 10 147 155
157 and 10 148 153
158 not 10 157
159 eq 10 112 64
160 or 10 158 159
161 and 10 156 160
162 or 10 127 161
163 eq 10 81 26
164 and 10 122 163
165 not 10 164
166 eq 10 33 114
167 or 10 165 166
168 eq 10 81 23
169 and 10 122 168
170 and 10 165 169
171 not 10 170
172 or 10 171 166
173 and 10 167 172
174 and 10 165 171
175 uext 7 30 1
176 eq 10 81 175
177 and 10 122 176
178 and 10 174 177
179 not 10 178
180 eq 10 48 114
181 or 10 179 180
182 and 10 173 181
183 and 10 174 179
184 redor 10 81
185 not 10 184
186 and 10 122 185
187 and 10 183 186
188 not 10 187
189 eq 10 69 114
190 or 10 188 189
191 and 10 182 190
192 and 10 183 188
193 not 10 192
194 eq 10 114 69
195 or 10 193 194
196 and 10 191 195
197 or 10 127 196
198 and 10 162 197
199 eq 10 83 26
200 and 10 122 199
201 not 10 200
202 eq 10 33 116
203 or 10 201 202
204 eq 10 83 23
205 and 10 122 204
206 and 10 201 205
207 not 10 206
208 or 10 207 202
209 and 10 203 208
210 and 10 201 207
211 uext 7 30 1
212 eq 10 83 211
213 and 10 122 212
214 and 10 210 213
215 not 10 214
216 eq 10 48 116
217 or 10 215 216
218 and 10 209 217
219 and 10 210 215
220 redor 10 83
221 not 10 220
222 and 10 122 221
223 and 10 219 222
224 not 10 223
225 eq 10 67 116
226 or 10 224 225
227 and 10 218 226
228 and 10 219 224
229 not 10 228
230 eq 10 116 67
231 or 10 229 230
232 and 10 227 231
233 or 10 127 232
234 and 10 198 233
235 eq 10 85 26
236 and 10 122 235
237 not 10 236
238 eq 10 118 33
239 or 10 237 238
240 eq 10 85 23
241 and 10 122 240
242 and 10 237 241
243 not 10 242
244 or 10 243 238
245 and 10 239 244
246 and 10 237 243
247 uext 7 30 1
248 eq 10 85 247
249 and 10 122 248
250 and 10 246 249
251 not 10 250
252 eq 10 48 118
253 or 10 251 252
254 and 10 245 253
255 and 10 246 251
256 redor 10 85
257 not 10 256
258 and 10 122 257
259 and 10 255 258
260 not 10 259
261 eq 10 68 118
262 or 10 260 261
263 and 10 254 262
264 and 10 255 260
265 not 10 264
266 eq 10 118 68
267 or 10 265 266
268 and 10 263 267
269 or 10 127 268
270 and 10 234 269
271 output 270 __all_assert_wire__ ; wrapper.v:126.19-126.38
272 not 10 122
273 and 10 58 11
274 or 10 272 273
275 eq 10 6 9
276 or 10 272 275
277 and 10 274 276
278 slice 10 79 1 1
279 and 10 35 53
280 redor 10 51
281 not 10 280
282 and 10 279 281
283 eq 10 278 282
284 and 10 277 283
285 slice 10 79 0 0
286 and 10 38 46
287 redor 10 44
288 not 10 287
289 and 10 286 288
290 eq 10 285 289
291 and 10 284 290
292 slice 10 81 1 1
293 uext 7 30 1
294 eq 10 51 293
295 and 10 279 294
296 eq 10 292 295
297 and 10 291 296
298 slice 10 81 0 0
299 uext 7 30 1
300 eq 10 44 299
301 and 10 286 300
302 eq 10 298 301
303 and 10 297 302
304 slice 10 83 1 1
305 eq 10 51 26
306 and 10 279 305
307 eq 10 304 306
308 and 10 303 307
309 slice 10 83 0 0
310 eq 10 44 26
311 and 10 286 310
312 eq 10 309 311
313 and 10 308 312
314 slice 10 85 1 1
315 eq 10 51 23
316 and 10 279 315
317 eq 10 314 316
318 and 10 313 317
319 slice 10 85 0 0
320 eq 10 44 23
321 and 10 286 320
322 eq 10 319 321
323 and 10 318 322
324 slice 7 6 7 6
325 eq 10 324 26
326 or 10 272 325
327 and 10 323 326
328 or 10 272 30
329 and 10 327 328
330 not 10 106
331 not 10 15
332 or 10 330 331
333 and 10 329 332
334 or 10 272 161
335 and 10 333 334
336 or 10 272 196
337 and 10 335 336
338 or 10 272 232
339 and 10 337 338
340 or 10 272 268
341 and 10 339 340
342 output 341 __all_assume_wire__ ; wrapper.v:127.19-127.38
343 output 274 additional_mapping_control_assume__p0__ ; wrapper.v:128.19-128.58
344 output 276 input_map_assume___p1__ ; wrapper.v:129.19-129.42
345 output 283 invariant_assume__p2__ ; wrapper.v:130.19-130.41
346 output 290 invariant_assume__p3__ ; wrapper.v:131.19-131.41
347 output 296 invariant_assume__p4__ ; wrapper.v:132.19-132.41
348 output 302 invariant_assume__p5__ ; wrapper.v:133.19-133.41
349 output 307 invariant_assume__p6__ ; wrapper.v:134.19-134.41
350 output 312 invariant_assume__p7__ ; wrapper.v:135.19-135.41
351 output 317 invariant_assume__p8__ ; wrapper.v:136.19-136.41
352 output 322 invariant_assume__p9__ ; wrapper.v:137.19-137.41
353 output 326 issue_decode__p10__ ; wrapper.v:138.19-138.38
354 output 328 issue_valid__p11__ ; wrapper.v:139.19-139.37
355 output 332 noreset__p12__ ; wrapper.v:140.19-140.33
356 state 10
357 init 10 356 89
358 output 356 ppl_stage_ex ; wrapper.v:161.23-161.35
359 output 122 ppl_stage_ex_enter_cond ; wrapper.v:141.19-141.42
360 output 42 ppl_stage_ex_exit_cond ; wrapper.v:142.19-142.41
361 output 97 ppl_stage_finish ; wrapper.v:163.23-163.39
362 state 10
363 init 10 362 89
364 and 10 362 87
365 output 364 ppl_stage_finish_enter_cond ; wrapper.v:143.19-143.46
366 output 30 ppl_stage_finish_exit_cond ; wrapper.v:144.19-144.45
367 output 362 ppl_stage_wb ; wrapper.v:162.23-162.35
368 and 10 356 42
369 output 368 ppl_stage_wb_enter_cond ; wrapper.v:145.19-145.42
370 output 87 ppl_stage_wb_exit_cond ; wrapper.v:146.19-146.41
371 output 162 variable_map_assert__p17__ ; wrapper.v:147.19-147.45
372 output 197 variable_map_assert__p18__ ; wrapper.v:148.19-148.45
373 output 233 variable_map_assert__p19__ ; wrapper.v:149.19-149.45
374 output 269 variable_map_assert__p20__ ; wrapper.v:150.19-150.45
375 output 334 variable_map_assume___p13__ ; wrapper.v:151.19-151.46
376 output 336 variable_map_assume___p14__ ; wrapper.v:152.19-152.46
377 output 338 variable_map_assume___p15__ ; wrapper.v:153.19-153.46
378 output 340 variable_map_assume___p16__ ; wrapper.v:154.19-154.46
379 not 10 30
380 or 10 341 379
381 constraint 380
382 not 10 270
383 and 10 30 382
384 uext 10 16 0 ILA.rst ; wrapper.v:259.22-271.2|wrapper.v:377.18-377.21
385 sort bitvec 4
386 const 385 0000
387 slice 385 6 5 2
388 concat 1 386 387
389 slice 7 6 1 0
390 redor 10 389
391 not 10 390
392 ite 1 391 388 112
393 uext 1 392 0 ILA.n9 ; wrapper.v:259.22-271.2|wrapper.v:406.17-406.19
394 uext 1 388 0 ILA.n8 ; wrapper.v:259.22-271.2|wrapper.v:405.17-405.19
395 slice 385 6 5 2
396 uext 385 395 0 ILA.n7 ; wrapper.v:259.22-271.2|wrapper.v:404.17-404.19
397 uext 10 391 0 ILA.n6 ; wrapper.v:259.22-271.2|wrapper.v:403.17-403.19
398 uext 7 389 0 ILA.n4 ; wrapper.v:259.22-271.2|wrapper.v:402.17-402.19
399 uext 10 325 0 ILA.n2 ; wrapper.v:259.22-271.2|wrapper.v:401.17-401.19
400 eq 10 389 23
401 ite 1 400 388 118
402 uext 1 401 0 ILA.n17 ; wrapper.v:259.22-271.2|wrapper.v:400.17-400.20
403 uext 10 400 0 ILA.n16 ; wrapper.v:259.22-271.2|wrapper.v:399.17-399.20
404 eq 10 389 26
405 ite 1 404 388 116
406 uext 1 405 0 ILA.n14 ; wrapper.v:259.22-271.2|wrapper.v:398.17-398.20
407 uext 10 404 0 ILA.n13 ; wrapper.v:259.22-271.2|wrapper.v:397.17-397.20
408 uext 7 30 1
409 eq 10 389 408
410 ite 1 409 388 114
411 uext 1 410 0 ILA.n12 ; wrapper.v:259.22-271.2|wrapper.v:396.17-396.20
412 uext 10 409 0 ILA.n11 ; wrapper.v:259.22-271.2|wrapper.v:395.17-395.20
413 uext 7 324 0 ILA.n0 ; wrapper.v:259.22-271.2|wrapper.v:394.17-394.19
414 uext 1 6 0 ILA.inst ; wrapper.v:259.22-271.2|wrapper.v:376.18-376.22
415 uext 10 14 0 ILA.clk ; wrapper.v:259.22-271.2|wrapper.v:375.18-375.21
416 uext 7 23 0 ILA.bv_2_3_n15 ; wrapper.v:259.22-271.2|wrapper.v:391.17-391.27
417 uext 7 26 0 ILA.bv_2_2_n1 ; wrapper.v:259.22-271.2|wrapper.v:390.17-390.26
418 uext 7 65 0 ILA.bv_2_1_n10 ; wrapper.v:259.22-271.2|wrapper.v:389.17-389.27
419 uext 7 63 0 ILA.bv_2_0_n5 ; wrapper.v:259.22-271.2|wrapper.v:388.17-388.26
420 uext 10 122 0 ILA.__START__ ; wrapper.v:259.22-271.2|wrapper.v:374.18-374.27
421 uext 10 30 0 ILA.__ILA_simplePipe_valid__ ; wrapper.v:259.22-271.2|wrapper.v:379.19-379.43
422 uext 10 325 0 ILA.__ILA_simplePipe_decode_of_SET__ ; wrapper.v:259.22-271.2|wrapper.v:378.19-378.51
423 state 1 ILA.__COUNTER_start__n3
424 init 1 423 93
425 uext 10 87 0 RTL.wb_go ; wrapper.v:301.12-332.2|wrapper.v:527.6-527.11
426 uext 1 48 0 RTL.wb_forwarding_val ; wrapper.v:301.12-332.2|wrapper.v:547.12-547.29
427 uext 10 37 0 RTL.wb_ex_ready ; wrapper.v:301.12-332.2|wrapper.v:526.6-526.17
428 uext 10 13 0 RTL.stallwb ; wrapper.v:301.12-332.2|wrapper.v:484.36-484.43
429 uext 10 89 0 RTL.stallid ; wrapper.v:301.12-332.2|wrapper.v:519.6-519.13
430 uext 10 12 0 RTL.stallex ; wrapper.v:301.12-332.2|wrapper.v:484.16-484.23
431 ite 10 87 89 319
432 and 10 35 53
433 eq 10 51 23
434 and 10 432 433
435 ite 10 42 434 431
436 ite 10 42 89 314
437 slice 7 9 7 6
438 uext 7 30 1
439 eq 10 437 438
440 eq 10 437 26
441 or 10 439 440
442 eq 10 437 23
443 or 10 441 442
444 and 10 11 443
445 slice 7 9 1 0
446 eq 10 445 23
447 and 10 444 446
448 and 10 11 58
449 ite 10 448 447 436
450 concat 7 449 435
451 uext 7 450 0 RTL.scoreboard_nxt[3] ; wrapper.v:301.12-332.2|wrapper.v:553.12-553.26
452 ite 10 87 89 309
453 eq 10 51 26
454 and 10 432 453
455 ite 10 42 454 452
456 ite 10 42 89 304
457 eq 10 445 26
458 and 10 444 457
459 ite 10 448 458 456
460 concat 7 459 455
461 uext 7 460 0 RTL.scoreboard_nxt[2] ; wrapper.v:301.12-332.2|wrapper.v:553.12-553.26
462 ite 10 87 89 298
463 uext 7 30 1
464 eq 10 51 463
465 and 10 432 464
466 ite 10 42 465 462
467 ite 10 42 89 292
468 uext 7 30 1
469 eq 10 445 468
470 and 10 444 469
471 ite 10 448 470 467
472 concat 7 471 466
473 uext 7 472 0 RTL.scoreboard_nxt[1] ; wrapper.v:301.12-332.2|wrapper.v:553.12-553.26
474 ite 10 87 89 285
475 redor 10 51
476 not 10 475
477 and 10 432 476
478 ite 10 42 477 474
479 ite 10 42 89 278
480 redor 10 445
481 not 10 480
482 and 10 444 481
483 ite 10 448 482 479
484 concat 7 483 478
485 uext 7 484 0 RTL.scoreboard_nxt[0] ; wrapper.v:301.12-332.2|wrapper.v:553.12-553.26
486 uext 10 15 0 RTL.rst ; wrapper.v:301.12-332.2|wrapper.v:482.32-482.35
487 input 7
488 eq 10 71 23
489 ite 7 488 85 487
490 eq 10 71 26
491 ite 7 490 83 489
492 uext 7 30 1
493 eq 10 71 492
494 ite 7 493 81 491
495 redor 10 71
496 not 10 495
497 ite 7 496 79 494
498 uext 7 497 0 RTL.rs2_write_loc ; wrapper.v:301.12-332.2|wrapper.v:621.12-621.25
499 uext 1 72 0 RTL.rs2_val ; wrapper.v:301.12-332.2|wrapper.v:623.12-623.19
500 uext 7 71 0 RTL.rs2 ; wrapper.v:301.12-332.2|wrapper.v:615.12-615.15
501 input 7
502 eq 10 73 23
503 ite 7 502 85 501
504 eq 10 73 26
505 ite 7 504 83 503
506 uext 7 30 1
507 eq 10 73 506
508 ite 7 507 81 505
509 redor 10 73
510 not 10 509
511 ite 7 510 79 508
512 uext 7 511 0 RTL.rs1_write_loc ; wrapper.v:301.12-332.2|wrapper.v:620.12-620.25
513 uext 1 74 0 RTL.rs1_val ; wrapper.v:301.12-332.2|wrapper.v:622.12-622.19
514 uext 7 73 0 RTL.rs1 ; wrapper.v:301.12-332.2|wrapper.v:614.12-614.15
515 uext 7 445 0 RTL.rd ; wrapper.v:301.12-332.2|wrapper.v:616.12-616.14
516 uext 7 437 0 RTL.op ; wrapper.v:301.12-332.2|wrapper.v:613.12-613.14
517 uext 10 11 0 RTL.inst_valid ; wrapper.v:301.12-332.2|wrapper.v:483.39-483.49
518 uext 10 58 0 RTL.inst_ready ; wrapper.v:301.12-332.2|wrapper.v:483.63-483.73
519 uext 1 9 0 RTL.inst ; wrapper.v:301.12-332.2|wrapper.v:483.22-483.26
520 slice 385 9 5 2
521 uext 385 520 0 RTL.immd
522 uext 10 11 0 RTL.if_id_valid ; wrapper.v:301.12-332.2|wrapper.v:516.6-516.17
523 uext 1 9 0 RTL.if_id_inst ; wrapper.v:301.12-332.2|wrapper.v:494.12-494.22
524 uext 10 443 0 RTL.id_wen ; wrapper.v:301.12-332.2|wrapper.v:618.6-618.12
525 uext 7 30 1
526 eq 10 497 525
527 ite 1 526 48 33
528 redor 10 497
529 not 10 528
530 ite 1 529 72 527
531 uext 1 530 0 RTL.id_rs2_val ; wrapper.v:301.12-332.2|wrapper.v:629.12-629.22
532 uext 7 30 1
533 eq 10 511 532
534 ite 1 533 48 33
535 redor 10 511
536 not 10 535
537 ite 1 536 74 534
538 uext 1 537 0 RTL.id_rs1_val ; wrapper.v:301.12-332.2|wrapper.v:625.12-625.22
539 uext 1 530 0 RTL.id_operand2 ; wrapper.v:301.12-332.2|wrapper.v:634.12-634.23
540 slice 385 9 5 2
541 concat 1 386 540
542 ite 1 440 541 537
543 uext 1 542 0 RTL.id_operand1 ; wrapper.v:301.12-332.2|wrapper.v:633.12-633.23
544 uext 10 58 0 RTL.id_if_ready ; wrapper.v:301.12-332.2|wrapper.v:517.6-517.17
545 uext 10 448 0 RTL.id_go ; wrapper.v:301.12-332.2|wrapper.v:518.6-518.11
546 uext 10 444 0 RTL.forwarding_id_wen ; wrapper.v:301.12-332.2|wrapper.v:538.12-538.29
547 uext 7 445 0 RTL.forwarding_id_wdst ; wrapper.v:301.12-332.2|wrapper.v:537.12-537.30
548 uext 10 432 0 RTL.forwarding_ex_wen ; wrapper.v:301.12-332.2|wrapper.v:540.12-540.29
549 uext 7 51 0 RTL.forwarding_ex_wdst ; wrapper.v:301.12-332.2|wrapper.v:539.12-539.30
550 uext 10 41 0 RTL.ex_id_ready ; wrapper.v:301.12-332.2|wrapper.v:522.6-522.17
551 uext 10 42 0 RTL.ex_go ; wrapper.v:301.12-332.2|wrapper.v:523.6-523.11
552 uext 1 33 0 RTL.ex_forwarding_val ; wrapper.v:301.12-332.2|wrapper.v:544.12-544.29
553 uext 1 33 0 RTL.ex_alu_result ; wrapper.v:301.12-332.2|wrapper.v:672.11-672.24
554 uext 1 70 0 RTL.dummy_rf_data ; wrapper.v:301.12-332.2|wrapper.v:485.55-485.68
555 uext 7 8 0 RTL.dummy_read_rf ; wrapper.v:301.12-332.2|wrapper.v:485.22-485.35
556 uext 10 14 0 RTL.clk ; wrapper.v:301.12-332.2|wrapper.v:482.16-482.19
557 uext 10 87 0 RTL.RTL__DOT__wb_go ; wrapper.v:301.12-332.2|wrapper.v:486.132-486.147
558 uext 7 85 0 RTL.RTL__DOT__scoreboard_3_ ; wrapper.v:301.12-332.2|wrapper.v:486.704-486.727
559 uext 7 83 0 RTL.RTL__DOT__scoreboard_2_ ; wrapper.v:301.12-332.2|wrapper.v:486.202-486.225
560 uext 7 81 0 RTL.RTL__DOT__scoreboard_1_ ; wrapper.v:301.12-332.2|wrapper.v:486.51-486.74
561 uext 7 79 0 RTL.RTL__DOT__scoreboard_0_ ; wrapper.v:301.12-332.2|wrapper.v:486.94-486.117
562 uext 1 68 0 RTL.RTL__DOT__registers_3_ ; wrapper.v:301.12-332.2|wrapper.v:486.626-486.648
563 uext 1 67 0 RTL.RTL__DOT__registers_2_ ; wrapper.v:301.12-332.2|wrapper.v:486.430-486.452
564 uext 1 69 0 RTL.RTL__DOT__registers_1_ ; wrapper.v:301.12-332.2|wrapper.v:486.789-486.811
565 uext 1 64 0 RTL.RTL__DOT__registers_0_ ; wrapper.v:301.12-332.2|wrapper.v:486.747-486.769
566 uext 10 11 0 RTL.RTL__DOT__inst_valid ; wrapper.v:301.12-332.2|wrapper.v:486.314-486.334
567 uext 10 58 0 RTL.RTL__DOT__inst_ready ; wrapper.v:301.12-332.2|wrapper.v:486.162-486.182
568 uext 1 9 0 RTL.RTL__DOT__inst ; wrapper.v:301.12-332.2|wrapper.v:486.510-486.524
569 uext 10 35 0 RTL.RTL__DOT__id_ex_valid ; wrapper.v:301.12-332.2|wrapper.v:486.240-486.261
570 uext 10 53 0 RTL.RTL__DOT__id_ex_reg_wen ; wrapper.v:301.12-332.2|wrapper.v:486.467-486.490
571 uext 7 51 0 RTL.RTL__DOT__id_ex_rd ; wrapper.v:301.12-332.2|wrapper.v:486.392-486.410
572 uext 10 38 0 RTL.RTL__DOT__ex_wb_valid ; wrapper.v:301.12-332.2|wrapper.v:486.663-486.684
573 uext 1 48 0 RTL.RTL__DOT__ex_wb_val ; wrapper.v:301.12-332.2|wrapper.v:486.544-486.563
574 uext 10 46 0 RTL.RTL__DOT__ex_wb_reg_wen ; wrapper.v:301.12-332.2|wrapper.v:486.276-486.299
575 uext 7 44 0 RTL.RTL__DOT__ex_wb_rd ; wrapper.v:301.12-332.2|wrapper.v:486.354-486.372
576 uext 10 42 0 RTL.RTL__DOT__ex_go ; wrapper.v:301.12-332.2|wrapper.v:486.16-486.31
577 uext 1 33 0 RTL.RTL__DOT__ex_alu_result ; wrapper.v:301.12-332.2|wrapper.v:486.583-486.606
578 uext 10 325 0 __ILA_simplePipe_decode_of_SET__ ; wrapper.v:193.28-193.60
579 uext 10 30 0 __ILA_simplePipe_valid__ ; wrapper.v:194.28-194.52
580 uext 10 30 0 __ISSUE__ ; wrapper.v:195.28-195.37
581 ite 1 448 542 18
582 ite 1 15 18 581
583 next 1 18 582
584 ite 1 448 530 19
585 ite 1 15 19 584
586 next 1 19 585
587 ite 7 448 437 22
588 ite 7 15 22 587
589 next 7 22 588
590 ite 10 42 89 35
591 ite 10 448 11 590
592 ite 10 15 89 591
593 next 10 35 592
594 ite 10 87 89 38
595 and 10 35 36
596 ite 10 42 595 594
597 ite 10 15 89 596
598 next 10 38 597
599 ite 7 42 51 44
600 ite 7 15 44 599
601 next 7 44 600
602 ite 10 42 53 46
603 ite 10 15 89 602
604 next 10 46 603
605 ite 1 42 33 48
606 ite 1 15 48 605
607 next 1 48 606
608 ite 7 448 445 51
609 ite 7 15 51 608
610 next 7 51 609
611 ite 10 448 443 53
612 ite 10 15 89 611
613 next 10 53 612
614 ite 7 15 63 484
615 next 7 79 614
616 ite 7 15 63 472
617 next 7 81 616
618 ite 7 15 63 460
619 next 7 83 618
620 ite 7 15 63 450
621 next 7 85 620
622 and 10 103 101
623 not 10 90
624 and 10 622 623
625 ite 10 624 30 90
626 ite 10 16 89 625
627 next 10 90 626
628 uext 1 30 7
629 add 1 94 628
630 or 10 122 99
631 const 1 10001001
632 ult 10 94 631
633 and 10 630 632
634 ite 1 633 629 94
635 ite 1 16 93 634
636 next 1 94 635
637 ite 10 364 30 89
638 ite 10 16 89 637
639 next 10 97 638
640 ite 10 122 30 99
641 ite 10 16 89 640
642 next 10 99 641
643 ite 10 110 30 103
644 ite 10 16 89 643
645 next 10 103 644
646 ite 10 16 30 106
647 next 10 106 646
648 ite 1 325 392 112
649 ite 1 122 648 112
650 ite 1 16 5 649
651 next 1 112 650
652 ite 1 325 410 114
653 ite 1 122 652 114
654 ite 1 16 4 653
655 next 1 114 654
656 ite 1 325 405 116
657 ite 1 122 656 116
658 ite 1 16 3 657
659 next 1 116 658
660 ite 1 325 401 118
661 ite 1 122 660 118
662 ite 1 16 2 661
663 next 1 118 662
664 ite 10 630 89 122
665 ite 10 16 30 664
666 next 10 122 665
667 ite 10 42 89 356
668 ite 10 122 30 667
669 ite 10 16 89 668
670 next 10 356 669
671 ite 10 87 89 362
672 ite 10 368 30 671
673 ite 10 16 89 672
674 next 10 362 673
675 uext 1 30 7
676 add 1 423 675
677 uext 1 30 7
678 ugte 10 423 677
679 const 1 11111111
680 ult 10 423 679
681 and 10 678 680
682 ite 1 681 676 423
683 const 1 00000001
684 ite 1 325 683 682
685 ite 1 122 684 423
686 ite 1 16 93 685
687 next 1 423 686
688 input 7
689 and 10 87 46
690 ite 7 689 44 688
691 input 1
692 ite 1 689 48 691
693 ite 10 689 30 89
694 concat 7 693 693
695 sort bitvec 3
696 concat 695 693 694
697 concat 385 693 696
698 sort bitvec 5
699 concat 698 693 697
700 sort bitvec 6
701 concat 700 693 699
702 sort bitvec 7
703 concat 702 693 701
704 concat 1 693 703
705 read 1 62 690
706 not 1 704
707 and 1 705 706
708 and 1 692 704
709 or 1 708 707
710 write 61 62 690 709
711 redor 10 704
712 ite 61 711 710 62
713 next 61 62 712 RTL.registers ; wrapper.v:301.12-332.2|wrapper.v:509.11-509.20
714 bad 383
; end of yosys output
