; BTOR description generated by Yosys 0.12+36 (git sha1 7608985d2, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) for module wrapper.
1 sort bitvec 8
2 input 1 ILA.r3_randinit ; wrapper.v:259.22-271.2|wrapper.v:396.28-396.39
3 input 1 ILA.r2_randinit ; wrapper.v:259.22-271.2|wrapper.v:395.28-395.39
4 input 1 ILA.r1_randinit ; wrapper.v:259.22-271.2|wrapper.v:394.28-394.39
5 input 1 ILA.r0_randinit ; wrapper.v:259.22-271.2|wrapper.v:393.28-393.39
6 input 1 __ILA_I_inst ; wrapper.v:88.18-88.30
7 sort bitvec 2
8 input 7 __VLG_I_dummy_read_rf ; wrapper.v:89.18-89.39
9 input 1 __VLG_I_inst ; wrapper.v:90.18-90.30
10 sort bitvec 1
11 input 10 __VLG_I_inst_valid ; wrapper.v:91.18-91.36
12 input 10 __VLG_I_stallex ; wrapper.v:92.18-92.33
13 input 10 __VLG_I_stallwb ; wrapper.v:93.18-93.33
14 input 10 clk ; wrapper.v:94.18-94.21
15 input 10 dummy_reset ; wrapper.v:95.18-95.29
16 input 10 rst ; wrapper.v:96.18-96.21
17 input 1
18 state 1 RTL.id_ex_operand1
19 state 1 RTL.id_ex_operand2
20 and 1 18 19
21 not 1 20
22 state 7 RTL.id_ex_op
23 const 7 11
24 eq 10 22 23
25 ite 1 24 21 17
26 const 7 10
27 eq 10 22 26
28 ite 1 27 18 25
29 add 1 18 19
30 const 10 1
31 uext 7 30 1
32 eq 10 22 31
33 ite 1 32 29 28
34 output 33 RTL__DOT__ex_alu_result ; wrapper.v:97.19-97.42
35 state 10 RTL.id_ex_valid
36 not 10 12
37 not 10 13
38 state 10 RTL.ex_wb_valid
39 not 10 38
40 or 10 37 39
41 and 10 36 40
42 and 10 35 41
43 output 42 RTL__DOT__ex_go ; wrapper.v:98.19-98.34
44 state 7 RTL.ex_wb_rd
45 output 44 RTL__DOT__ex_wb_rd ; wrapper.v:99.19-99.37
46 state 10 RTL.ex_wb_reg_wen
47 output 46 RTL__DOT__ex_wb_reg_wen ; wrapper.v:100.19-100.42
48 state 1 RTL.ex_wb_val
49 output 48 RTL__DOT__ex_wb_val ; wrapper.v:101.19-101.38
50 output 38 RTL__DOT__ex_wb_valid ; wrapper.v:102.19-102.40
51 state 7 RTL.id_ex_rd
52 output 51 RTL__DOT__id_ex_rd ; wrapper.v:103.19-103.37
53 state 10 RTL.id_ex_reg_wen
54 output 53 RTL__DOT__id_ex_reg_wen ; wrapper.v:104.19-104.42
55 output 35 RTL__DOT__id_ex_valid ; wrapper.v:105.19-105.40
56 output 9 RTL__DOT__inst ; wrapper.v:106.19-106.33
57 not 10 35
58 or 10 41 57
59 output 58 RTL__DOT__inst_ready ; wrapper.v:107.19-107.39
60 output 11 RTL__DOT__inst_valid ; wrapper.v:108.19-108.39
61 sort array 7 1
62 state 61 RTL.registers
63 const 7 00
64 read 1 62 63
65 const 7 01
66 read 1 62 65
67 read 1 62 26
68 read 1 62 23
69 read 1 62 65
70 read 1 62 8
71 slice 7 9 3 2
72 read 1 62 71
73 slice 7 9 5 4
74 read 1 62 73
75 output 64 RTL__DOT__registers_0_ ; wrapper.v:109.19-109.41
76 output 69 RTL__DOT__registers_1_ ; wrapper.v:110.19-110.41
77 output 67 RTL__DOT__registers_2_ ; wrapper.v:111.19-111.41
78 output 68 RTL__DOT__registers_3_ ; wrapper.v:112.19-112.41
79 state 7 RTL.scoreboard[0]
80 output 79 RTL__DOT__scoreboard_0_ ; wrapper.v:113.19-113.42
81 state 7 RTL.scoreboard[1]
82 output 81 RTL__DOT__scoreboard_1_ ; wrapper.v:114.19-114.42
83 state 7 RTL.scoreboard[2]
84 output 83 RTL__DOT__scoreboard_2_ ; wrapper.v:115.19-115.42
85 state 7 RTL.scoreboard[3]
86 output 85 RTL__DOT__scoreboard_3_ ; wrapper.v:116.19-116.42
87 and 10 38 37
88 output 87 RTL__DOT__wb_go ; wrapper.v:117.19-117.34
89 const 10 0
90 state 10
91 init 10 90 89
92 output 90 __2ndENDED__ ; wrapper.v:159.23-159.35
93 const 1 00000000
94 state 1
95 init 1 94 93
96 output 94 __CYCLE_CNT__ ; wrapper.v:155.23-155.36
97 state 10
98 init 10 97 89
99 state 10
100 init 10 99 89
101 and 10 97 99
102 output 101 __EDCOND__ ; wrapper.v:118.19-118.29
103 state 10
104 init 10 103 89
105 output 103 __ENDED__ ; wrapper.v:158.23-158.32
106 state 10
107 init 10 106 30
108 and 10 101 106
109 not 10 103
110 and 10 108 109
111 output 110 __IEND__ ; wrapper.v:119.19-119.27
112 state 1 ILA.r0
113 output 112 __ILA_SO_r0 ; wrapper.v:120.19-120.30
114 state 1 ILA.r1
115 output 114 __ILA_SO_r1 ; wrapper.v:121.19-121.30
116 state 1 ILA.r2
117 output 116 __ILA_SO_r2 ; wrapper.v:122.19-122.30
118 state 1 ILA.r3
119 output 118 __ILA_SO_r3 ; wrapper.v:123.19-123.30
120 output 106 __RESETED__ ; wrapper.v:160.23-160.34
121 output 99 __STARTED__ ; wrapper.v:157.23-157.34
122 state 10
123 init 10 122 30
124 output 122 __START__ ; wrapper.v:156.23-156.32
125 output 70 __VLG_O_dummy_rf_data ; wrapper.v:124.19-124.40
126 output 58 __VLG_O_inst_ready ; wrapper.v:125.19-125.37
127 not 10 110
128 eq 10 79 26
129 and 10 122 128
130 not 10 129
131 eq 10 33 112
132 or 10 130 131
133 eq 10 79 23
134 and 10 122 133
135 and 10 130 134
136 not 10 135
137 or 10 136 131
138 and 10 132 137
139 and 10 130 136
140 uext 7 30 1
141 eq 10 79 140
142 and 10 122 141
143 and 10 139 142
144 not 10 143
145 eq 10 48 112
146 or 10 144 145
147 and 10 138 146
148 and 10 139 144
149 redor 10 79
150 not 10 149
151 and 10 122 150
152 and 10 148 151
153 not 10 152
154 eq 10 64 112
155 or 10 153 154
156 and 10 147 155
157 and 10 148 153
158 not 10 157
159 eq 10 112 64
160 or 10 158 159
161 and 10 156 160
162 or 10 127 161
163 eq 10 81 26
164 and 10 122 163
165 not 10 164
166 eq 10 33 114
167 or 10 165 166
168 eq 10 81 23
169 and 10 122 168
170 and 10 165 169
171 not 10 170
172 or 10 171 166
173 and 10 167 172
174 and 10 165 171
175 uext 7 30 1
176 eq 10 81 175
177 and 10 122 176
178 and 10 174 177
179 not 10 178
180 eq 10 48 114
181 or 10 179 180
182 and 10 173 181
183 and 10 174 179
184 redor 10 81
185 not 10 184
186 and 10 122 185
187 and 10 183 186
188 not 10 187
189 eq 10 69 114
190 or 10 188 189
191 and 10 182 190
192 and 10 183 188
193 not 10 192
194 eq 10 114 69
195 or 10 193 194
196 and 10 191 195
197 or 10 127 196
198 and 10 162 197
199 eq 10 83 26
200 and 10 122 199
201 not 10 200
202 eq 10 33 116
203 or 10 201 202
204 eq 10 83 23
205 and 10 122 204
206 and 10 201 205
207 not 10 206
208 or 10 207 202
209 and 10 203 208
210 and 10 201 207
211 uext 7 30 1
212 eq 10 83 211
213 and 10 122 212
214 and 10 210 213
215 not 10 214
216 eq 10 48 116
217 or 10 215 216
218 and 10 209 217
219 and 10 210 215
220 redor 10 83
221 not 10 220
222 and 10 122 221
223 and 10 219 222
224 not 10 223
225 eq 10 67 116
226 or 10 224 225
227 and 10 218 226
228 and 10 219 224
229 not 10 228
230 eq 10 116 67
231 or 10 229 230
232 and 10 227 231
233 or 10 127 232
234 and 10 198 233
235 eq 10 85 26
236 and 10 122 235
237 not 10 236
238 eq 10 118 33
239 or 10 237 238
240 eq 10 85 23
241 and 10 122 240
242 and 10 237 241
243 not 10 242
244 or 10 243 238
245 and 10 239 244
246 and 10 237 243
247 uext 7 30 1
248 eq 10 85 247
249 and 10 122 248
250 and 10 246 249
251 not 10 250
252 eq 10 48 118
253 or 10 251 252
254 and 10 245 253
255 and 10 246 251
256 redor 10 85
257 not 10 256
258 and 10 122 257
259 and 10 255 258
260 not 10 259
261 eq 10 68 118
262 or 10 260 261
263 and 10 254 262
264 and 10 255 260
265 not 10 264
266 eq 10 118 68
267 or 10 265 266
268 and 10 263 267
269 or 10 127 268
270 and 10 234 269
271 output 270 __all_assert_wire__ ; wrapper.v:126.19-126.38
272 not 10 122
273 and 10 58 11
274 or 10 272 273
275 eq 10 6 9
276 or 10 272 275
277 and 10 274 276
278 slice 10 79 1 1
279 and 10 35 53
280 redor 10 51
281 not 10 280
282 and 10 279 281
283 eq 10 278 282
284 and 10 277 283
285 slice 10 79 0 0
286 and 10 38 46
287 redor 10 44
288 not 10 287
289 and 10 286 288
290 eq 10 285 289
291 and 10 284 290
292 slice 10 81 1 1
293 uext 7 30 1
294 eq 10 51 293
295 and 10 279 294
296 eq 10 292 295
297 and 10 291 296
298 slice 10 81 0 0
299 uext 7 30 1
300 eq 10 44 299
301 and 10 286 300
302 eq 10 298 301
303 and 10 297 302
304 slice 10 83 1 1
305 eq 10 51 26
306 and 10 279 305
307 eq 10 304 306
308 and 10 303 307
309 slice 10 83 0 0
310 eq 10 44 26
311 and 10 286 310
312 eq 10 309 311
313 and 10 308 312
314 slice 10 85 1 1
315 eq 10 51 23
316 and 10 279 315
317 eq 10 314 316
318 and 10 313 317
319 slice 10 85 0 0
320 eq 10 44 23
321 and 10 286 320
322 eq 10 319 321
323 and 10 318 322
324 slice 7 6 7 6
325 redor 10 324
326 not 10 325
327 or 10 272 326
328 and 10 323 327
329 or 10 272 30
330 and 10 328 329
331 not 10 106
332 not 10 15
333 or 10 331 332
334 and 10 330 333
335 or 10 272 161
336 and 10 334 335
337 or 10 272 196
338 and 10 336 337
339 or 10 272 232
340 and 10 338 339
341 or 10 272 268
342 and 10 340 341
343 output 342 __all_assume_wire__ ; wrapper.v:127.19-127.38
344 output 274 additional_mapping_control_assume__p0__ ; wrapper.v:128.19-128.58
345 output 276 input_map_assume___p1__ ; wrapper.v:129.19-129.42
346 output 283 invariant_assume__p2__ ; wrapper.v:130.19-130.41
347 output 290 invariant_assume__p3__ ; wrapper.v:131.19-131.41
348 output 296 invariant_assume__p4__ ; wrapper.v:132.19-132.41
349 output 302 invariant_assume__p5__ ; wrapper.v:133.19-133.41
350 output 307 invariant_assume__p6__ ; wrapper.v:134.19-134.41
351 output 312 invariant_assume__p7__ ; wrapper.v:135.19-135.41
352 output 317 invariant_assume__p8__ ; wrapper.v:136.19-136.41
353 output 322 invariant_assume__p9__ ; wrapper.v:137.19-137.41
354 output 327 issue_decode__p10__ ; wrapper.v:138.19-138.38
355 output 329 issue_valid__p11__ ; wrapper.v:139.19-139.37
356 output 333 noreset__p12__ ; wrapper.v:140.19-140.33
357 state 10
358 init 10 357 89
359 output 357 ppl_stage_ex ; wrapper.v:161.23-161.35
360 output 122 ppl_stage_ex_enter_cond ; wrapper.v:141.19-141.42
361 output 42 ppl_stage_ex_exit_cond ; wrapper.v:142.19-142.41
362 output 97 ppl_stage_finish ; wrapper.v:163.23-163.39
363 state 10
364 init 10 363 89
365 and 10 363 87
366 output 365 ppl_stage_finish_enter_cond ; wrapper.v:143.19-143.46
367 output 30 ppl_stage_finish_exit_cond ; wrapper.v:144.19-144.45
368 output 363 ppl_stage_wb ; wrapper.v:162.23-162.35
369 and 10 357 42
370 output 369 ppl_stage_wb_enter_cond ; wrapper.v:145.19-145.42
371 output 87 ppl_stage_wb_exit_cond ; wrapper.v:146.19-146.41
372 output 162 variable_map_assert__p17__ ; wrapper.v:147.19-147.45
373 output 197 variable_map_assert__p18__ ; wrapper.v:148.19-148.45
374 output 233 variable_map_assert__p19__ ; wrapper.v:149.19-149.45
375 output 269 variable_map_assert__p20__ ; wrapper.v:150.19-150.45
376 output 335 variable_map_assume___p13__ ; wrapper.v:151.19-151.46
377 output 337 variable_map_assume___p14__ ; wrapper.v:152.19-152.46
378 output 339 variable_map_assume___p15__ ; wrapper.v:153.19-153.46
379 output 341 variable_map_assume___p16__ ; wrapper.v:154.19-154.46
380 not 10 30
381 or 10 342 380
382 constraint 381
383 not 10 270
384 and 10 30 383
385 uext 10 16 0 ILA.rst ; wrapper.v:259.22-271.2|wrapper.v:377.18-377.21
386 uext 10 326 0 ILA.n2 ; wrapper.v:259.22-271.2|wrapper.v:392.17-392.19
387 uext 7 324 0 ILA.n0 ; wrapper.v:259.22-271.2|wrapper.v:391.17-391.19
388 uext 1 6 0 ILA.inst ; wrapper.v:259.22-271.2|wrapper.v:376.18-376.22
389 uext 10 14 0 ILA.clk ; wrapper.v:259.22-271.2|wrapper.v:375.18-375.21
390 uext 7 63 0 ILA.bv_2_0_n1 ; wrapper.v:259.22-271.2|wrapper.v:388.17-388.26
391 uext 10 122 0 ILA.__START__ ; wrapper.v:259.22-271.2|wrapper.v:374.18-374.27
392 uext 10 30 0 ILA.__ILA_simplePipe_valid__ ; wrapper.v:259.22-271.2|wrapper.v:379.19-379.43
393 uext 10 326 0 ILA.__ILA_simplePipe_decode_of_NOP__ ; wrapper.v:259.22-271.2|wrapper.v:378.19-378.51
394 state 1 ILA.__COUNTER_start__n3
395 init 1 394 93
396 uext 10 87 0 RTL.wb_go ; wrapper.v:301.12-332.2|wrapper.v:499.6-499.11
397 uext 1 48 0 RTL.wb_forwarding_val ; wrapper.v:301.12-332.2|wrapper.v:519.12-519.29
398 uext 10 37 0 RTL.wb_ex_ready ; wrapper.v:301.12-332.2|wrapper.v:498.6-498.17
399 uext 10 13 0 RTL.stallwb ; wrapper.v:301.12-332.2|wrapper.v:456.36-456.43
400 uext 10 89 0 RTL.stallid ; wrapper.v:301.12-332.2|wrapper.v:491.6-491.13
401 uext 10 12 0 RTL.stallex ; wrapper.v:301.12-332.2|wrapper.v:456.16-456.23
402 ite 10 87 89 319
403 and 10 35 53
404 eq 10 51 23
405 and 10 403 404
406 ite 10 42 405 402
407 ite 10 42 89 314
408 slice 7 9 7 6
409 uext 7 30 1
410 eq 10 408 409
411 eq 10 408 26
412 or 10 410 411
413 eq 10 408 23
414 or 10 412 413
415 and 10 11 414
416 slice 7 9 1 0
417 eq 10 416 23
418 and 10 415 417
419 and 10 11 58
420 ite 10 419 418 407
421 concat 7 420 406
422 uext 7 421 0 RTL.scoreboard_nxt[3] ; wrapper.v:301.12-332.2|wrapper.v:525.12-525.26
423 ite 10 87 89 309
424 eq 10 51 26
425 and 10 403 424
426 ite 10 42 425 423
427 ite 10 42 89 304
428 eq 10 416 26
429 and 10 415 428
430 ite 10 419 429 427
431 concat 7 430 426
432 uext 7 431 0 RTL.scoreboard_nxt[2] ; wrapper.v:301.12-332.2|wrapper.v:525.12-525.26
433 ite 10 87 89 298
434 uext 7 30 1
435 eq 10 51 434
436 and 10 403 435
437 ite 10 42 436 433
438 ite 10 42 89 292
439 uext 7 30 1
440 eq 10 416 439
441 and 10 415 440
442 ite 10 419 441 438
443 concat 7 442 437
444 uext 7 443 0 RTL.scoreboard_nxt[1] ; wrapper.v:301.12-332.2|wrapper.v:525.12-525.26
445 ite 10 87 89 285
446 redor 10 51
447 not 10 446
448 and 10 403 447
449 ite 10 42 448 445
450 ite 10 42 89 278
451 redor 10 416
452 not 10 451
453 and 10 415 452
454 ite 10 419 453 450
455 concat 7 454 449
456 uext 7 455 0 RTL.scoreboard_nxt[0] ; wrapper.v:301.12-332.2|wrapper.v:525.12-525.26
457 uext 10 15 0 RTL.rst ; wrapper.v:301.12-332.2|wrapper.v:454.32-454.35
458 input 7
459 eq 10 71 23
460 ite 7 459 85 458
461 eq 10 71 26
462 ite 7 461 83 460
463 uext 7 30 1
464 eq 10 71 463
465 ite 7 464 81 462
466 redor 10 71
467 not 10 466
468 ite 7 467 79 465
469 uext 7 468 0 RTL.rs2_write_loc ; wrapper.v:301.12-332.2|wrapper.v:593.12-593.25
470 uext 1 72 0 RTL.rs2_val ; wrapper.v:301.12-332.2|wrapper.v:595.12-595.19
471 uext 7 71 0 RTL.rs2 ; wrapper.v:301.12-332.2|wrapper.v:587.12-587.15
472 input 7
473 eq 10 73 23
474 ite 7 473 85 472
475 eq 10 73 26
476 ite 7 475 83 474
477 uext 7 30 1
478 eq 10 73 477
479 ite 7 478 81 476
480 redor 10 73
481 not 10 480
482 ite 7 481 79 479
483 uext 7 482 0 RTL.rs1_write_loc ; wrapper.v:301.12-332.2|wrapper.v:592.12-592.25
484 uext 1 74 0 RTL.rs1_val ; wrapper.v:301.12-332.2|wrapper.v:594.12-594.19
485 uext 7 73 0 RTL.rs1 ; wrapper.v:301.12-332.2|wrapper.v:586.12-586.15
486 uext 7 416 0 RTL.rd ; wrapper.v:301.12-332.2|wrapper.v:588.12-588.14
487 uext 7 408 0 RTL.op ; wrapper.v:301.12-332.2|wrapper.v:585.12-585.14
488 uext 10 11 0 RTL.inst_valid ; wrapper.v:301.12-332.2|wrapper.v:455.39-455.49
489 uext 10 58 0 RTL.inst_ready ; wrapper.v:301.12-332.2|wrapper.v:455.63-455.73
490 uext 1 9 0 RTL.inst ; wrapper.v:301.12-332.2|wrapper.v:455.22-455.26
491 sort bitvec 4
492 slice 491 9 5 2
493 uext 491 492 0 RTL.immd
494 uext 10 11 0 RTL.if_id_valid ; wrapper.v:301.12-332.2|wrapper.v:488.6-488.17
495 uext 1 9 0 RTL.if_id_inst ; wrapper.v:301.12-332.2|wrapper.v:466.12-466.22
496 uext 10 414 0 RTL.id_wen ; wrapper.v:301.12-332.2|wrapper.v:590.6-590.12
497 uext 7 30 1
498 eq 10 468 497
499 ite 1 498 48 33
500 redor 10 468
501 not 10 500
502 ite 1 501 72 499
503 uext 1 502 0 RTL.id_rs2_val ; wrapper.v:301.12-332.2|wrapper.v:601.12-601.22
504 uext 7 30 1
505 eq 10 482 504
506 ite 1 505 48 33
507 redor 10 482
508 not 10 507
509 ite 1 508 74 506
510 uext 1 509 0 RTL.id_rs1_val ; wrapper.v:301.12-332.2|wrapper.v:597.12-597.22
511 uext 1 502 0 RTL.id_operand2 ; wrapper.v:301.12-332.2|wrapper.v:606.12-606.23
512 const 491 0000
513 slice 491 9 5 2
514 concat 1 512 513
515 ite 1 411 514 509
516 uext 1 515 0 RTL.id_operand1 ; wrapper.v:301.12-332.2|wrapper.v:605.12-605.23
517 uext 10 58 0 RTL.id_if_ready ; wrapper.v:301.12-332.2|wrapper.v:489.6-489.17
518 uext 10 419 0 RTL.id_go ; wrapper.v:301.12-332.2|wrapper.v:490.6-490.11
519 uext 10 415 0 RTL.forwarding_id_wen ; wrapper.v:301.12-332.2|wrapper.v:510.12-510.29
520 uext 7 416 0 RTL.forwarding_id_wdst ; wrapper.v:301.12-332.2|wrapper.v:509.12-509.30
521 uext 10 403 0 RTL.forwarding_ex_wen ; wrapper.v:301.12-332.2|wrapper.v:512.12-512.29
522 uext 7 51 0 RTL.forwarding_ex_wdst ; wrapper.v:301.12-332.2|wrapper.v:511.12-511.30
523 uext 10 41 0 RTL.ex_id_ready ; wrapper.v:301.12-332.2|wrapper.v:494.6-494.17
524 uext 10 42 0 RTL.ex_go ; wrapper.v:301.12-332.2|wrapper.v:495.6-495.11
525 uext 1 33 0 RTL.ex_forwarding_val ; wrapper.v:301.12-332.2|wrapper.v:516.12-516.29
526 uext 1 33 0 RTL.ex_alu_result ; wrapper.v:301.12-332.2|wrapper.v:644.11-644.24
527 uext 1 70 0 RTL.dummy_rf_data ; wrapper.v:301.12-332.2|wrapper.v:457.55-457.68
528 uext 7 8 0 RTL.dummy_read_rf ; wrapper.v:301.12-332.2|wrapper.v:457.22-457.35
529 uext 10 14 0 RTL.clk ; wrapper.v:301.12-332.2|wrapper.v:454.16-454.19
530 uext 10 87 0 RTL.RTL__DOT__wb_go ; wrapper.v:301.12-332.2|wrapper.v:458.132-458.147
531 uext 7 85 0 RTL.RTL__DOT__scoreboard_3_ ; wrapper.v:301.12-332.2|wrapper.v:458.704-458.727
532 uext 7 83 0 RTL.RTL__DOT__scoreboard_2_ ; wrapper.v:301.12-332.2|wrapper.v:458.202-458.225
533 uext 7 81 0 RTL.RTL__DOT__scoreboard_1_ ; wrapper.v:301.12-332.2|wrapper.v:458.51-458.74
534 uext 7 79 0 RTL.RTL__DOT__scoreboard_0_ ; wrapper.v:301.12-332.2|wrapper.v:458.94-458.117
535 uext 1 68 0 RTL.RTL__DOT__registers_3_ ; wrapper.v:301.12-332.2|wrapper.v:458.626-458.648
536 uext 1 67 0 RTL.RTL__DOT__registers_2_ ; wrapper.v:301.12-332.2|wrapper.v:458.430-458.452
537 uext 1 69 0 RTL.RTL__DOT__registers_1_ ; wrapper.v:301.12-332.2|wrapper.v:458.789-458.811
538 uext 1 64 0 RTL.RTL__DOT__registers_0_ ; wrapper.v:301.12-332.2|wrapper.v:458.747-458.769
539 uext 10 11 0 RTL.RTL__DOT__inst_valid ; wrapper.v:301.12-332.2|wrapper.v:458.314-458.334
540 uext 10 58 0 RTL.RTL__DOT__inst_ready ; wrapper.v:301.12-332.2|wrapper.v:458.162-458.182
541 uext 1 9 0 RTL.RTL__DOT__inst ; wrapper.v:301.12-332.2|wrapper.v:458.510-458.524
542 uext 10 35 0 RTL.RTL__DOT__id_ex_valid ; wrapper.v:301.12-332.2|wrapper.v:458.240-458.261
543 uext 10 53 0 RTL.RTL__DOT__id_ex_reg_wen ; wrapper.v:301.12-332.2|wrapper.v:458.467-458.490
544 uext 7 51 0 RTL.RTL__DOT__id_ex_rd ; wrapper.v:301.12-332.2|wrapper.v:458.392-458.410
545 uext 10 38 0 RTL.RTL__DOT__ex_wb_valid ; wrapper.v:301.12-332.2|wrapper.v:458.663-458.684
546 uext 1 48 0 RTL.RTL__DOT__ex_wb_val ; wrapper.v:301.12-332.2|wrapper.v:458.544-458.563
547 uext 10 46 0 RTL.RTL__DOT__ex_wb_reg_wen ; wrapper.v:301.12-332.2|wrapper.v:458.276-458.299
548 uext 7 44 0 RTL.RTL__DOT__ex_wb_rd ; wrapper.v:301.12-332.2|wrapper.v:458.354-458.372
549 uext 10 42 0 RTL.RTL__DOT__ex_go ; wrapper.v:301.12-332.2|wrapper.v:458.16-458.31
550 uext 1 33 0 RTL.RTL__DOT__ex_alu_result ; wrapper.v:301.12-332.2|wrapper.v:458.583-458.606
551 uext 10 326 0 __ILA_simplePipe_decode_of_NOP__ ; wrapper.v:193.28-193.60
552 uext 10 30 0 __ILA_simplePipe_valid__ ; wrapper.v:194.28-194.52
553 uext 10 30 0 __ISSUE__ ; wrapper.v:195.28-195.37
554 ite 1 419 515 18
555 ite 1 15 18 554
556 next 1 18 555
557 ite 1 419 502 19
558 ite 1 15 19 557
559 next 1 19 558
560 ite 7 419 408 22
561 ite 7 15 22 560
562 next 7 22 561
563 ite 10 42 89 35
564 ite 10 419 11 563
565 ite 10 15 89 564
566 next 10 35 565
567 ite 10 87 89 38
568 and 10 35 36
569 ite 10 42 568 567
570 ite 10 15 89 569
571 next 10 38 570
572 ite 7 42 51 44
573 ite 7 15 44 572
574 next 7 44 573
575 ite 10 42 53 46
576 ite 10 15 89 575
577 next 10 46 576
578 ite 1 42 33 48
579 ite 1 15 48 578
580 next 1 48 579
581 ite 7 419 416 51
582 ite 7 15 51 581
583 next 7 51 582
584 ite 10 419 414 53
585 ite 10 15 89 584
586 next 10 53 585
587 ite 7 15 63 455
588 next 7 79 587
589 ite 7 15 63 443
590 next 7 81 589
591 ite 7 15 63 431
592 next 7 83 591
593 ite 7 15 63 421
594 next 7 85 593
595 and 10 103 101
596 not 10 90
597 and 10 595 596
598 ite 10 597 30 90
599 ite 10 16 89 598
600 next 10 90 599
601 uext 1 30 7
602 add 1 94 601
603 or 10 122 99
604 const 1 10001001
605 ult 10 94 604
606 and 10 603 605
607 ite 1 606 602 94
608 ite 1 16 93 607
609 next 1 94 608
610 ite 10 365 30 89
611 ite 10 16 89 610
612 next 10 97 611
613 ite 10 122 30 99
614 ite 10 16 89 613
615 next 10 99 614
616 ite 10 110 30 103
617 ite 10 16 89 616
618 next 10 103 617
619 ite 10 16 30 106
620 next 10 106 619
621 ite 1 16 5 112
622 next 1 112 621
623 ite 1 16 4 114
624 next 1 114 623
625 ite 1 16 3 116
626 next 1 116 625
627 ite 1 16 2 118
628 next 1 118 627
629 ite 10 603 89 122
630 ite 10 16 30 629
631 next 10 122 630
632 ite 10 42 89 357
633 ite 10 122 30 632
634 ite 10 16 89 633
635 next 10 357 634
636 ite 10 87 89 363
637 ite 10 369 30 636
638 ite 10 16 89 637
639 next 10 363 638
640 uext 1 30 7
641 add 1 394 640
642 uext 1 30 7
643 ugte 10 394 642
644 const 1 11111111
645 ult 10 394 644
646 and 10 643 645
647 ite 1 646 641 394
648 const 1 00000001
649 ite 1 326 648 647
650 ite 1 122 649 394
651 ite 1 16 93 650
652 next 1 394 651
653 input 7
654 and 10 87 46
655 ite 7 654 44 653
656 input 1
657 ite 1 654 48 656
658 ite 10 654 30 89
659 concat 7 658 658
660 sort bitvec 3
661 concat 660 658 659
662 concat 491 658 661
663 sort bitvec 5
664 concat 663 658 662
665 sort bitvec 6
666 concat 665 658 664
667 sort bitvec 7
668 concat 667 658 666
669 concat 1 658 668
670 read 1 62 655
671 not 1 669
672 and 1 670 671
673 and 1 657 669
674 or 1 673 672
675 write 61 62 655 674
676 redor 10 669
677 ite 61 676 675 62
678 next 61 62 677 RTL.registers ; wrapper.v:301.12-332.2|wrapper.v:481.11-481.20
679 bad 384
; end of yosys output
